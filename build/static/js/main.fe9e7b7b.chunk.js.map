{"version":3,"sources":["images/VerserLogo.png","Test.js","Pagination.js","Paginate.js","common/searchBox.js","DeviceCategories.js","InventoryItems.js","Carriers.js","LifecycleStatus.js","Oem.js","OperatingSystemsList.js","OperatingSystems.js","Plans.js","Assets.js","EndUsersList.js","CreateCompany.js","FormFactors.js","Colours.js","NewContract.js","CreateEndUser.js","CreateNewAssets.js","CreateCompanyTest.js","CompanyList.js","common/input.js","registerForm.js","common/form.js","Layout.js","Random.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","$","document","ready","keyup","that","this","tableBody","tableRowsClass","remove","each","i","val","rowText","text","toLowerCase","inputText","prepend","indexOf","eq","hide","show","children","length","append","Test","react_default","a","createElement","className","action","method","Component","Pagination","props","itemsCount","pageSize","currentPage","onPageChange","console","log","pagesCount","pages","_","range","map","page","key","onClick","paginate","items","pageNumber","startIndex","slice","take","value","SearchBox","_ref","onChange","type","name","placeholder","e","currentTarget","DeviceCategories","state","deviceCategories","searchQuery","handlePageChange","_this","setState","handleSearch","query","getPagedData","_this$state","alldeviceCategories","filtered","filter","m","id","startsWith","totalCount","data","axios","get","deviceCategorie","newState","splice","_this2","count","_this$state2","Fragment","searchBox","deviceCategoryName","createdBy","created","modifiedBy","modified","delete","bind","src_Pagination","InventoryItems","inventoryItems","allinventoryItems","inventoryItem","inventoryitem","inventoryItemName","model","warrantyPeriod","maintenancePeriod","supplierLeadTime","inventoryItem_Colour","inventoryItem_DeviceCategory","inventoryItem_FormFactor","inventoryItem_OEM","inventoryItem_OperatingSystem","Carriers","carriers","allCarriers","carrier","carrierName","LifecycleStatus","lifecycleStatus","alllifecycleStatus","lifecycle","lifecycleStatusName","sortOrder","Oem","oems","alloems","oem","oemName","OperatingSystemsList","OperatingSystems","lib_default","list","src_OperatingSystemsList","Plans","plans","allplans","plan","planName","monthyCost","contractLength","Assets","assets","allassets","asset","_id","AssetID","SerialNo","Asset_Company","IMEI","SIMNo","PurchaseOrderNo","PurchaseDate","PurchasePrice","DecomissionDate","Condition","BuyBackPrice","AquisitionDate","SPMD","FirstCommissionDate","LastCommissionDate","LastRepairDate","Asset_Contract","Asset_EndUser","Asset_LifecycleStatus","Asset_InventoryItem","Asset_OSVersion","EndUsersList","EndUsers","allEndUsers","EndUser","endUser_Company","employeeNo","firstName","lastName","department","costCode","endUserStatus","commencementDate","terminationDate","userName","endUser_Site","CreateCompany","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","assertThisInitialized","handleChange","event","defineProperty","target","preventDefault","alert","JSON","stringify","fetch","cache","headers","Accept","Access-Control-Allow-Methods","Content-Type","body","then","resp","json","response","info","esm","defaultIndex","onSelect","index","autoFocus","onSubmit","Container","Row","Col","htmlFor","required","src_Assets","src_EndUsersList","secondaryInitialSize","vertical","href","primaryIndex","React","FormFactors","isLoaded","res","item","colourName","Colours","colours","allColours","colour","NewContract","CreateEndUser","CreateNewAssets","CreateCompanyTest","company","companyName","AddressLine1","AddressLine2","Suburb","State","Postcode","Phone","CreatedBy","Email","ServiceStartDate","ServiceEndDate","validate","errors","trim","keys","input","objectSpread","disabled","CompanyList","comapnylists","allcomapnylists","comapnylist","Input","label","error","rest","objectWithoutProperties","assign","LoginForm","username","password","schema","Joi","string","min","doSubmit","renderInput","renderButton","abortEarly","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","details","Symbol","iterator","next","done","path","message","err","return","validateProperty","obj","_ref2","errorMessage","arguments","common_input","Layout","src_Carriers","src_Colours","src_Test","apiEndpoint","Random","contractlists","handleAdd","_callee","post","regenerator_default","wrap","_context","prev","contract_Plan","contract_EndUser","contract_Company","sent","concat","toConsumableArray","stop","App","BrowserRouter","src","logo","alt","Nav","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","DropdownItem","Link","to","right","Route_default","exact","render","src_CreateNewAssets","src_CreateCompany","src_NewContract","src_CreateEndUser","src_CompanyList","src_Oem","src_OperatingSystems","src_Plans","src_FormFactors","src_InventoryItems","src_LifecycleStatus","src_DeviceCategories","src_Layout","src_Random","src_CreateCompanyTest","registerForm","Boolean","window","location","hostname","match","process","REACT_APP_NAME","ReactDOM","src_App_0","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.fe9e7b7b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/VerserLogo.5c6e2a14.png\";","import React, { Component } from \"react\";\r\nimport $ from \"jquery\"; \r\n\r\n// This is Assets in Create New Company with manually entered data\r\n\r\n$(document).ready(function() {\r\n    var activeSystemClass = $('.list-group-item.active');\r\n\r\n    //something is entered in search form\r\n    $('#system-search').keyup( function() {\r\n       var that = this;\r\n        // affect all table rows on in systems table\r\n        var tableBody = $('.table-list-search tbody');\r\n        var tableRowsClass = $('.table-list-search tbody tr');\r\n        $('.search-sf').remove();\r\n        tableRowsClass.each( function(i, val) {\r\n        \r\n            //Lower text for case insensitive\r\n            var rowText = $(val).text().toLowerCase();\r\n            var inputText = $(that).val().toLowerCase();\r\n            if(inputText != '')\r\n            {\r\n                $('.search-query-sf').remove();\r\n                tableBody.prepend('<tr class=\"search-query-sf\"><td colspan=\"6\"><strong>Searching for: \"'\r\n                    + $(that).val()\r\n                    + '\"</strong></td></tr>');\r\n            }\r\n            else\r\n            {\r\n                $('.search-query-sf').remove();\r\n            }\r\n\r\n            if( rowText.indexOf( inputText ) == -1 )\r\n            {\r\n                //hide rows\r\n                tableRowsClass.eq(i).hide();\r\n                \r\n            }\r\n            else\r\n            {\r\n                $('.search-sf').remove();\r\n                tableRowsClass.eq(i).show();\r\n            }\r\n        });\r\n        //all tr elements are hidden\r\n        if(tableRowsClass.children(':visible').length == 0)\r\n        {\r\n            tableBody.append('<tr class=\"search-sf\"><td class=\"text-muted\" colspan=\"6\">No entries found.</td></tr>');\r\n        }\r\n    });\r\n});\r\nclass Test extends Component {\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"container\">\r\n        <h1> Test </h1>\r\n\t<div className=\"row\">\r\n        <div className=\"col-md-3\">\r\n            <form action=\"#\" method=\"get\">\r\n                <div className=\"input-group\">\r\n                    {/* <input className=\"form-control\" id=\"system-search\" name=\"q\" placeholder=\"Search with keyword\" required/> */}\r\n                    {/* <input type=\"search\" className=\"searchbox\" placeholder=\"Search\" ref={input => this.search = input} onChange={this.handleInputChange} /> */}\r\n                </div>\r\n            </form>\r\n        </div>\r\n        {/* <input type=\"search\" className=\"searchbox\" placeholder=\"Search\" ref={input => this.search = input} onChange={this.handleInputChange} /> */}\r\n\t\t<div className=\"col-md-9\">\r\n        \r\n    \t <table className=\"table table-list-search\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Asset ID</th>\r\n                            <th>Inventory Ite</th>\r\n                            <th>IMEI</th>\r\n                            <th>Serial No.</th>\r\n                            <th>SIM No.</th>\r\n                            <th>Purchase Date</th>\r\n                            <th>Contract</th>\r\n                            <th>End User</th>\r\n                            <th>Date Issued</th>\r\n                            <th>Lifecycle Status</th>\r\n                            <th>Created By</th>\r\n                            <th>Date Created</th>\r\n                            <th>Modified By</th>\r\n                            <th>Modified</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>123</td>\r\n                            <td>1</td>\r\n                            <td>12345678</td>\r\n                            <td>12345</td>\r\n                            <td>123</td>\r\n                            <td>10</td>\r\n                            <td>12/02/2014</td>\r\n                            <td>Telstra</td>\r\n                            <td>Doe</td>\r\n                            <td>12/02/2014</td>\r\n                            <td>Ready for Sale</td>\r\n                            <td>Verser</td>\r\n                            <td>12/02/2014</td>\r\n                            <td>Brightstar</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>456</td>\r\n                            <td>2</td>\r\n                            <td>546456778</td>\r\n                            <td>435435</td>\r\n                            <td>123</td>\r\n                            <td>10</td>\r\n                            <td>12/02/2014</td>\r\n                            <td>Telstra</td>\r\n                            <td>Doe</td>\r\n                            <td>12/02/2014</td>\r\n                            <td>Ready for Sale</td>\r\n                            <td>Verser</td>\r\n                            <td>12/02/2014</td>\r\n                            <td>Brightstar</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>123</td>\r\n                            <td>1</td>\r\n                            <td>12345678</td>\r\n                            <td>12345</td>\r\n                            <td>123</td>\r\n                            <td>10</td>\r\n                            <td>12/02/2014</td>\r\n                            <td>Telstra</td>\r\n                            <td>Doe</td>\r\n                            <td>12/02/2014</td>\r\n                            <td>Ready for Sale</td>\r\n                            <td>Verser</td>\r\n                            <td>12/02/2014</td>\r\n                            <td>Brightstar</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>   \r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n        );\r\n    }\r\n}\r\nexport default Test;","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\n//const Pagination = ({ itemsCount, pageSize, currentPage, onPageChange }) => {\r\n// const pagesCount = Math.ceil(itemsCount / pageSize);\r\n// if (pagesCount === 1) return null;\r\n// const pages = _.range(1, pagesCount + 1);\r\n\r\nconst Pagination = props => {\r\n  const { itemsCount, pageSize, currentPage, onPageChange } = props;\r\n  console.log(currentPage);\r\n\r\n  const pagesCount = itemsCount / pageSize;\r\n  const pages = _.range(1, pagesCount + 1);\r\n\r\n  return (\r\n    <nav>\r\n      <ul className=\"pagination\">\r\n        {pages.map(page => (\r\n          <li\r\n            key={page}\r\n            className={page === currentPage ? \"page-item active\" : \"page-item\"}\r\n          >\r\n            <a className=\"page-link\" onClick={() => onPageChange(page)}>\r\n              {page}\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n    // <nav>\r\n    //   <ul className=\"pagination\">\r\n    //     {pages.map(page => (\r\n    //       <li\r\n    //         key={page}\r\n    //         className={page === currentPage ? \"page-item active\" : \"page-item\"}\r\n    //       >\r\n    //         <a className=\"page-link\" onClick={() => onPageChange(page)}>\r\n    //           {page}\r\n    //         </a>\r\n    //       </li>\r\n    //     ))}\r\n    //   </ul>\r\n    // </nav>\r\n  );\r\n};\r\n\r\n// Pagination.propTypes = {\r\n//   itemsCount: PropTypes.number.isRequired,\r\n//   pageSize: PropTypes.number.isRequired,\r\n//   currentPage: PropTypes.number.isRequired,\r\n//   onPageChange: PropTypes.func.isRequired\r\n// };\r\n\r\nexport default Pagination;\r\n","import _ from \"lodash\";\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n  const startIndex = (pageNumber - 1) * pageSize;\r\n  return _(items).slice(startIndex).take(pageSize).value();\r\n}\r\n","import React from \"react\";\r\n\r\nconst SearchBox = ({ value, onChange }) => {\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      name=\"query\"\r\n      className=\"form-control my-3\"\r\n      placeholder=\"Search..\"\r\n      value={value}\r\n      onChange={e => onChange(e.currentTarget.value)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBox;","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"react-super-responsive-table/dist/SuperResponsiveTableStyle.css\";\r\nimport Pagination from \"./Pagination\";\r\nimport { paginate } from \"../src/Paginate\";\r\nimport _ from \"lodash\";\r\n// import TableHead from './TableHead';\r\n import SearchBox from './common/searchBox';\r\n\r\nclass DeviceCategories extends Component {\r\n  state = {\r\n    deviceCategories: [],\r\n    searchQuery: \"\",\r\n    currentPage: 1,\r\n    pageSize: 10, //number of records on each page.\r\n    //isLoaded: false\r\n  };\r\n\r\n\r\n  //componentDidMount() {\r\n  //  fetch(\r\n   //   \"https://versergateway.com.au/VerserAssetLeasingServices/MasteData/DevicecategoriesList\"\r\n    //)\r\n   //   .then(res => res.json())\r\n    //  .then(json => {\r\n    //    this.setState({\r\n      //    isLoaded: true,\r\n      //    catagories: json\r\n      //  });\r\n     // });\r\n // }\r\n\r\n\r\n async componentDidMount(){\r\n  const {data: deviceCategories} = await axios.get(\"https://versergateway.com.au/VerserAssetLeasingServices/MasteData/DevicecategoriesList\");\r\n  this.setState({ deviceCategories});\r\n}\r\n\r\n\r\ndelete(deviceCategorie) {\r\n  const newState = this.state.deviceCategories.slice();\r\n  if (newState.indexOf(deviceCategorie) > -1) {\r\n    newState.splice(newState.indexOf(deviceCategorie), 1);\r\n    this.setState({ deviceCategories: newState });\r\n    console.log(deviceCategorie);\r\n  }\r\n}\r\n\r\nhandlePageChange = page => {\r\n  this.setState({ currentPage: page });\r\n};\r\n\r\nhandleSearch = query => {\r\n  this.setState({ searchQuery: query, currentPage: 1 }); //selectedGenre: null,\r\n};\r\n\r\n// handleSort = sortColumn => {\r\n//   this.setState({ sortColumn });\r\n// };\r\n\r\ngetPagedData = () => {\r\n  const {\r\n    pageSize,\r\n    currentPage,\r\n    searchQuery,\r\n    deviceCategories: alldeviceCategories\r\n  } = this.state; //selectedGenre,\r\n\r\n  let filtered = alldeviceCategories;\r\n  if (searchQuery)\r\n    filtered = alldeviceCategories.filter(m =>\r\n      m.id.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n    );\r\n\r\n  // else if (selectedGenre && selectedGenre._id)\r\n  //   filtered = allColours.filter(m => m.genre._id === selectedGenre._id);\r\n\r\n  //const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n\r\n  const deviceCategories = paginate( currentPage, pageSize);\r\n\r\n  return { totalCount: filtered.length, data: deviceCategories };\r\n};\r\n\r\nrender() {\r\n  const { length: count } = this.state.deviceCategories;\r\n  const { pageSize, currentPage, deviceCategories: alldeviceCategories, searchQuery } = this.state;\r\n\r\n  //var { isLoaded, colours } = this.state; //colours is added in the above line\r\n\r\n  if (count === 0) return <p>There are no records in the database.</p>\r\n  \r\n  const deviceCategories = paginate( alldeviceCategories, currentPage, pageSize);\r\n  //const { totalCount } = this.getPagedData();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {/* <div className=\"App\"> */}\r\n\r\n      {/* <h3> Colours </h3> */}\r\n\r\n      <SearchBox value={searchQuery} onChange={this.handleSearch} />\r\n\r\n      <table className=\"table table-list-search\">\r\n        <thead>\r\n          <tr>\r\n            <th>Device Category Name</th>\r\n            <th>Created By</th>\r\n            <th>Created</th>\r\n            <th>Modified By</th>\r\n            <th>Modified</th>\r\n            <th />\r\n          </tr>\r\n        </thead>\r\n        <tbody> \r\n          {deviceCategories.map(deviceCategorie => (\r\n            <tr key={deviceCategorie.id}> \r\n              <td> {deviceCategorie.deviceCategoryName}</td> \r\n              <td> {deviceCategorie.createdBy}</td>\r\n              <td> {deviceCategorie.created}</td>\r\n              <td> {deviceCategorie.modifiedBy}</td>\r\n              <td> {deviceCategorie.modified}</td>\r\n              <td>\r\n                <button\r\n                  className=\"btn btn-danger btn-sm\"\r\n                  onClick={this.delete.bind(this, deviceCategorie)}\r\n                >\r\n                  Delete\r\n                </button>\r\n                {/* <TableHead> <button\r\n                  className=\"btn btn-danger btn-sm\"\r\n                  onClick={this.delete.bind(this, colour)}\r\n                >\r\n                  Delete\r\n                </button> </TableHead> */}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <Pagination\r\n        itemsCount={count}\r\n        pageSize={pageSize}\r\n        currentPage={currentPage}\r\n        onPageChange={this.handlePageChange}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n}\r\nexport default DeviceCategories;\r\n\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"react-super-responsive-table/dist/SuperResponsiveTableStyle.css\";\r\nimport Pagination from \"./Pagination\";\r\nimport { paginate } from \"../src/Paginate\";\r\nimport _ from \"lodash\";\r\n// import TableHead from './TableHead';\r\n import SearchBox from './common/searchBox';\r\n\r\n\r\nclass InventoryItems extends Component {\r\n  state = {\r\n   inventoryItems: [],\r\n    searchQuery: \"\",\r\n    currentPage: 1,\r\n    pageSize: 10, //number of records on each page.\r\n    //isLoaded: false\r\n  };\r\n\r\n  //componentDidMount() {\r\n  //  fetch(\r\n  //    \"https://versergateway.com.au/VerserAssetLeasingServices/MasteData/InventoryItems\"\r\n   // )\r\n   //   .then(res => res.json())\r\n    //  .then(json => {\r\n     //   this.setState({\r\n      //    isLoaded: true,\r\n      //    inventoryitems: json\r\n      //  });\r\n   //   });\r\n//  }\r\n\r\nasync componentDidMount(){\r\n  const {data: inventoryItems} = await axios.get(\"https://versergateway.com.au/VerserAssetLeasingServices/MasteData/InventoryItems\");\r\n  this.setState({ inventoryItems});\r\n}\r\n\r\n\r\ndelete(inventoryItem) {\r\n  const newState = this.state.inventoryItems.slice();\r\n  if (newState.indexOf(inventoryItem) > -1) {\r\n    newState.splice(newState.indexOf(inventoryItem), 1);\r\n    this.setState({ inventoryItems: newState });\r\n    console.log(inventoryItem);\r\n  }\r\n}\r\n\r\nhandlePageChange = page => {\r\n  this.setState({ currentPage: page });\r\n};\r\n\r\nhandleSearch = query => {\r\n  this.setState({ searchQuery: query, currentPage: 1 }); //selectedGenre: null,\r\n};\r\n\r\n// handleSort = sortColumn => {\r\n//   this.setState({ sortColumn });\r\n// };\r\n\r\ngetPagedData = () => {\r\n  const {\r\n    pageSize,\r\n    currentPage,\r\n    searchQuery,\r\n    inventoryItems: allinventoryItems\r\n  } = this.state; //selectedGenre,\r\n\r\n  let filtered = allinventoryItems;\r\n  if (searchQuery)\r\n    filtered = allinventoryItems.filter(m =>\r\n      m.id.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n    );\r\n\r\n  // else if (selectedGenre && selectedGenre._id)\r\n  //   filtered = allColours.filter(m => m.genre._id === selectedGenre._id);\r\n\r\n  //const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n\r\n  const inventoryItems = paginate( currentPage, pageSize);\r\n\r\n  return { totalCount: filtered.length, data: inventoryItems };\r\n};\r\n\r\nrender() {\r\n  const { length: count } = this.state.inventoryItems;\r\n  const { pageSize, currentPage, inventoryItems: allinventoryItems, searchQuery } = this.state;\r\n\r\n  //var { isLoaded, colours } = this.state; //colours is added in the above line\r\n\r\n  if (count === 0) return <p>There are no records in the database.</p>\r\n  \r\n  const inventoryItems = paginate( allinventoryItems, currentPage, pageSize);\r\n  //const { totalCount } = this.getPagedData();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {/* <div className=\"App\"> */}\r\n\r\n      {/* <h3> Colours </h3> */}\r\n\r\n      <SearchBox value={searchQuery} onChange={this.handleSearch} />\r\n      <table className=\"table table-list-search\">\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Model</th>\r\n              <th>Warranty</th>\r\n              <th>Maintenance</th>\r\n              <th>Supplier Lead Time</th>\r\n              <th>Colour</th>\r\n              <th>Category</th>\r\n              <th>Form Factor</th>\r\n              <th>OEM</th>\r\n              <th>OS</th>\r\n              <th>Created By</th>\r\n              <th>Created</th>\r\n              <th>Modified By</th>\r\n              <th>Modified</th>\r\n              <th/>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {inventoryItems.map(inventoryitem => (\r\n              <tr key={inventoryitem.id}>\r\n                <td> {inventoryitem.inventoryItemName}</td>\r\n                <td> {inventoryitem.model}</td>\r\n                <td> {inventoryitem.warrantyPeriod}</td>\r\n                <td> {inventoryitem.maintenancePeriod} </td>\r\n                <td> {inventoryitem.supplierLeadTime}</td>\r\n                <td> {inventoryitem.inventoryItem_Colour}</td>\r\n                <td> {inventoryitem.inventoryItem_DeviceCategory}</td>\r\n                <td> {inventoryitem.inventoryItem_FormFactor} </td>\r\n                <td> {inventoryitem.inventoryItem_OEM}</td>\r\n                <td> {inventoryitem.inventoryItem_OperatingSystem}</td>\r\n                <td> {inventoryitem.createdBy} </td>\r\n                <td> {inventoryitem.created}</td>\r\n                <td> {inventoryitem.modifiedBy}</td>\r\n                <td> {inventoryitem.modified}</td>\r\n                <td>\r\n                <button\r\n                    className=\"btn btn-danger btn-sm\"\r\n                    onClick={this.delete.bind(this, inventoryitem)}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  {/* <TableHead> <button\r\n                    className=\"btn btn-danger btn-sm\"\r\n                    onClick={this.delete.bind(this, colour)}\r\n                  >\r\n                    Delete\r\n                  </button> </TableHead> */}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n        <Pagination\r\n          itemsCount={count}\r\n          pageSize={pageSize}\r\n          currentPage={currentPage}\r\n          onPageChange={this.handlePageChange}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default InventoryItems;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"react-super-responsive-table/dist/SuperResponsiveTableStyle.css\";\r\nimport Pagination from \"./Pagination\";\r\nimport { paginate } from \"../src/Paginate\";\r\nimport _ from \"lodash\";\r\n// import TableHead from './TableHead';\r\n import SearchBox from './common/searchBox';\r\n\r\n\r\nclass Carriers extends Component {\r\n  state = {\r\n    carriers: [],\r\n    searchQuery: \"\",\r\n    currentPage: 1,\r\n    pageSize: 10, //number of records on each page.\r\n    //isLoaded: false\r\n  };\r\n\r\n // componentDidMount() {\r\n //   fetch(\r\n  //    \"https://versergateway.com.au/VerserAssetLeasingServices/MasteData/CarriersList\"\r\n  //  )\r\n  //    .then(res => res.json())\r\n   //   .then(json => {\r\n  //      this.setState({\r\n   //       isLoaded: true,\r\n   //       carriers: json\r\n   //     });\r\n   //   });\r\n // }\r\n\r\n   \r\nasync componentDidMount(){\r\n  const {data: carriers} = await axios.get(\"https://versergateway.com.au/VerserAssetLeasingServices/MasteData/CarriersList\");\r\n  this.setState({ carriers});\r\n}\r\n\r\n\r\ndelete(carrier) {\r\n  const newState = this.state.carriers.slice();\r\n  if (newState.indexOf(carrier) > -1) {\r\n    newState.splice(newState.indexOf(carrier), 1);\r\n    this.setState({ carriers: newState });\r\n    console.log(carrier);\r\n  }\r\n}\r\n\r\nhandlePageChange = page => {\r\n  this.setState({ currentPage: page });\r\n};\r\n\r\nhandleSearch = query => {\r\n  this.setState({ searchQuery: query, currentPage: 1 }); //selectedGenre: null,\r\n};\r\n\r\n// handleSort = sortColumn => {\r\n//   this.setState({ sortColumn });\r\n// };\r\n\r\ngetPagedData = () => {\r\n  const {\r\n    pageSize,\r\n    currentPage,\r\n    searchQuery,\r\n    carriers: allCarriers\r\n  } = this.state; //selectedGenre,\r\n\r\n  let filtered = allCarriers;\r\n  if (searchQuery)\r\n    filtered = allCarriers.filter(m =>\r\n      m.id.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n    );\r\n\r\n  // else if (selectedGenre && selectedGenre._id)\r\n  //   filtered = allColours.filter(m => m.genre._id === selectedGenre._id);\r\n\r\n  //const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n\r\n  const carriers = paginate( currentPage, pageSize);\r\n\r\n  return { totalCount: filtered.length, data: carriers };\r\n};\r\n\r\nrender() {\r\n  const { length: count } = this.state.carriers;\r\n  const { pageSize, currentPage, carriers: allCarriers, searchQuery } = this.state;\r\n\r\n  //var { isLoaded, colours } = this.state; //colours is added in the above line\r\n\r\n  if (count === 0) return <p>There are no records in the database.</p>\r\n  \r\n  const carriers = paginate( allCarriers, currentPage, pageSize);\r\n  //const { totalCount } = this.getPagedData();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {/* <div className=\"App\"> */}\r\n\r\n      {/* <h3> Colours </h3> */}\r\n\r\n      <SearchBox value={searchQuery} onChange={this.handleSearch} />\r\n\r\n      <table className=\"table table-list-search\">\r\n        <thead>\r\n          <tr>\r\n            <th>Carrier Name</th>\r\n            <th>Created By</th>\r\n            <th>Created</th>\r\n            <th>Modified By</th>\r\n            <th>Modified</th>\r\n            <th />\r\n          </tr>\r\n        </thead>\r\n        <tbody> \r\n          {carriers.map(carrier => (\r\n            <tr key={carrier.id}> \r\n              <td> {carrier.carrierName}</td> \r\n              <td> {carrier.createdBy}</td>\r\n                <td> {carrier.created}</td>\r\n                <td>{carrier.modifiedBy}</td>\r\n                <td> {carrier.modified}</td>\r\n              <td>\r\n                <button\r\n                  className=\"btn btn-danger btn-sm\"\r\n                  onClick={this.delete.bind(this, carrier)}\r\n                >\r\n                  Delete\r\n                </button>\r\n                {/* <TableHead> <button\r\n                  className=\"btn btn-danger btn-sm\"\r\n                  onClick={this.delete.bind(this, carrier)}\r\n                >\r\n                  Delete\r\n                </button> </TableHead> */}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <Pagination\r\n        itemsCount={count}\r\n        pageSize={pageSize}\r\n        currentPage={currentPage}\r\n        onPageChange={this.handlePageChange}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n}\r\nexport default Carriers;\r\n \r\n\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"react-super-responsive-table/dist/SuperResponsiveTableStyle.css\";\r\nimport Pagination from \"./Pagination\";\r\nimport { paginate } from \"../src/Paginate\";\r\nimport _ from \"lodash\";\r\n// import TableHead from './TableHead';\r\n import SearchBox from './common/searchBox';\r\n\r\nclass LifecycleStatus extends Component {\r\n  state = {\r\n    lifecycleStatus: [],\r\n    searchQuery: \"\",\r\n    currentPage: 1,\r\n    pageSize: 10, //number of records on each page.\r\n    //isLoaded: false\r\n  };\r\n\r\n\r\n // componentDidMount() {\r\n  // fetch(\r\n   //   \"https://versergateway.com.au/VerserAssetLeasingServices/MasteData/LifeCycleStatusSetList\"\r\n   // )\r\n   //   .then(res => res.json())\r\n    //  .then(json => {\r\n     //   this.setState({\r\n       //   isLoaded: true,\r\n       //   lifecyclestatuslist: json\r\n      //  });\r\n     // });\r\n // }\r\n async componentDidMount(){\r\n  const {data: lifecycleStatus} = await axios.get(\"https://versergateway.com.au/VerserAssetLeasingServices/MasteData/LifeCycleStatusSetList\");\r\n  this.setState({ lifecycleStatus});\r\n}\r\ndelete(lifecycle) {\r\n  const newState = this.state.lifecycleStatus.slice();\r\n  if (newState.indexOf(lifecycle) > -1) {\r\n    newState.splice(newState.indexOf(lifecycle), 1);\r\n    this.setState({ lifecycleStatus: newState });\r\n    console.log(lifecycle);\r\n  }\r\n}\r\n\r\nhandlePageChange = page => {\r\n  this.setState({ currentPage: page });\r\n};\r\n\r\nhandleSearch = query => {\r\n  this.setState({ searchQuery: query, currentPage: 1 }); //selectedGenre: null,\r\n};\r\n\r\n// handleSort = sortColumn => {\r\n//   this.setState({ sortColumn });\r\n// };\r\n\r\ngetPagedData = () => {\r\n  const {\r\n    pageSize,\r\n    currentPage,\r\n    searchQuery,\r\n    lifecycleStatus: alllifecycleStatus\r\n  } = this.state; //selectedGenre,\r\n\r\n  let filtered = alllifecycleStatus;\r\n  if (searchQuery)\r\n    filtered = alllifecycleStatus.filter(m =>\r\n      m.id.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n    );\r\n\r\n  // else if (selectedGenre && selectedGenre._id)\r\n  //   filtered = allColours.filter(m => m.genre._id === selectedGenre._id);\r\n\r\n  //const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n\r\n  const lifecycleStatus = paginate( currentPage, pageSize);\r\n\r\n  return { totalCount: filtered.length, data: lifecycleStatus };\r\n};\r\n\r\nrender() {\r\n  const { length: count } = this.state.lifecycleStatus;\r\n  const { pageSize, currentPage, lifecycleStatus: alllifecycleStatus, searchQuery } = this.state;\r\n\r\n  //var { isLoaded, colours } = this.state; //colours is added in the above line\r\n\r\n  if (count === 0) return <p>There are no records in the database.</p>\r\n  \r\n  const lifecycleStatus = paginate( alllifecycleStatus, currentPage, pageSize);\r\n  //const { totalCount } = this.getPagedData();\r\n\r\n  return (\r\n    <React.Fragment>\r\n     \r\n\r\n      <SearchBox value={searchQuery} onChange={this.handleSearch} />\r\n        <table className=\"table table-list-search\">\r\n          <thead>\r\n            <tr>\r\n              <th>Status Name</th>\r\n              <th>Sort Order</th>\r\n              <th>Created By</th>\r\n              <th>Created</th>\r\n              <th>Modified By</th>\r\n              <th>Modified</th>\r\n              <th/>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {lifecycleStatus.map(lifecycle => (\r\n              <tr>\r\n                <td> {lifecycle.lifecycleStatusName} </td>\r\n                <td> {lifecycle.sortOrder}</td>\r\n                <td> {lifecycle.createdBy}</td>\r\n                <td> {lifecycle.created}</td>\r\n                <td> {lifecycle.modifiedBy}</td>\r\n                <td> {lifecycle.modified}</td>\r\n                <td>\r\n                <button\r\n                    className=\"btn btn-danger btn-sm\"\r\n                    onClick={this.delete.bind(this, lifecycle)}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  {/* <TableHead> <button\r\n                    className=\"btn btn-danger btn-sm\"\r\n                    onClick={this.delete.bind(this, colour)}\r\n                  >\r\n                    Delete\r\n                  </button> </TableHead> */}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n        <Pagination\r\n          itemsCount={count}\r\n          pageSize={pageSize}\r\n          currentPage={currentPage}\r\n          onPageChange={this.handlePageChange}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LifecycleStatus;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"react-super-responsive-table/dist/SuperResponsiveTableStyle.css\";\r\nimport Pagination from \"./Pagination\";\r\nimport { paginate } from \"../src/Paginate\";\r\nimport _ from \"lodash\";\r\n// import TableHead from './TableHead';\r\n import SearchBox from './common/searchBox';\r\n\r\nclass Oem extends Component {\r\n  state = {\r\n    oems: [],\r\n    searchQuery: \"\",\r\n    currentPage: 1,\r\n    pageSize: 10, //number of records on each page.\r\n    //isLoaded: false\r\n  };\r\n\r\n\r\n // componentDidMount() {\r\n //   fetch(\r\n  //    \"https://versergateway.com.au/VerserAssetLeasingServices/MasteData/OEMsList\"\r\n  //  )\r\n   //   .then(res => res.json())\r\n   //   .then(json => {\r\n     //   this.setState({\r\n     //     isLoaded: true,\r\n     //     oem: json\r\n     //   });\r\n    //  });\r\n  //}\r\n  async componentDidMount(){\r\n    const {data: oems} = await axios.get(\"https://versergateway.com.au/VerserAssetLeasingServices/MasteData/OEMsList\");\r\n    this.setState({ oems});\r\n  }\r\n  \r\n  delete(oem) {\r\n    const newState = this.state.oems.slice();\r\n    if (newState.indexOf(oem) > -1) {\r\n      newState.splice(newState.indexOf(oem), 1);\r\n      this.setState({ oems: newState });\r\n      console.log(oem);\r\n    }\r\n  }\r\n\r\n  handlePageChange = page => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  handleSearch = query => {\r\n    this.setState({ searchQuery: query, currentPage: 1 }); //selectedGenre: null,\r\n  };\r\n\r\n  // handleSort = sortColumn => {\r\n  //   this.setState({ sortColumn });\r\n  // };\r\n\r\n  getPagedData = () => {\r\n    const {\r\n      pageSize,\r\n      currentPage,\r\n      searchQuery,\r\n      oems: alloems\r\n    } = this.state; //selectedGenre,\r\n\r\n    let filtered = alloems;\r\n    if (searchQuery)\r\n      filtered = alloems.filter(m =>\r\n        m.id.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n      );\r\n\r\n    // else if (selectedGenre && selectedGenre._id)\r\n    //   filtered = allColours.filter(m => m.genre._id === selectedGenre._id);\r\n\r\n    //const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n\r\n    const oems = paginate( currentPage, pageSize);\r\n\r\n    return { totalCount: filtered.length, data: oems };\r\n  };\r\n\r\n  render() {\r\n    const { length: count } = this.state.oems;\r\n    const { pageSize, currentPage, oems: alloems, searchQuery } = this.state;\r\n\r\n    //var { isLoaded, colours } = this.state; //colours is added in the above line\r\n\r\n    if (count === 0) return <p>There are no records in the database.</p>\r\n    \r\n    const oems = paginate( alloems, currentPage, pageSize);\r\n    //const { totalCount } = this.getPagedData();\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {/* <div className=\"App\"> */}\r\n\r\n        {/* <h3> Colours </h3> */}\r\n\r\n        <SearchBox value={searchQuery} onChange={this.handleSearch} />\r\n        <table className=\"table table-list-search\">\r\n          <thead>\r\n            <tr>\r\n              <th>OEM Name</th>\r\n              <th>Created By</th>\r\n              <th>Created</th>\r\n              <th>Modified By</th>\r\n              <th>Modified</th>\r\n              <th />\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {oems.map(oem => (\r\n              <tr key={oem.id}>\r\n                <td> {oem.oemName}</td>\r\n                <td> {oem.createdBy}</td>\r\n                <td> {oem.created}</td>\r\n                <td> {oem.modifiedBy}</td>\r\n                <td> {oem.modified}</td>\r\n                <td>\r\n                <button\r\n                    className=\"btn btn-danger btn-sm\"\r\n                    onClick={this.delete.bind(this, oem)}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  {/* <TableHead> <button\r\n                    className=\"btn btn-danger btn-sm\"\r\n                    onClick={this.delete.bind(this, colour)}\r\n                  >\r\n                    Delete\r\n                  </button> </TableHead> */}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n        <Pagination\r\n          itemsCount={count}\r\n          pageSize={pageSize}\r\n          currentPage={currentPage}\r\n          onPageChange={this.handlePageChange}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default Oem;\r\n","import React, { Component } from \"react\";\r\nimport 'react-super-responsive-table/dist/SuperResponsiveTableStyle.css';\r\n\r\n\r\nclass OperatingSystemsList extends Component {\r\n\r\n    // constructor(props) {\r\n    //     super(props);\r\n    //     this.state = {\r\n    //         items: [],\r\n    //         isLoaded: false,\r\n    //     }\r\n    // }\r\n\r\n    // componentDidMount() {\r\n\r\n    //     fetch('') //No Link to fetch\r\n    //         .then(res => res.json())\r\n    //         .then(json => {\r\n    //             this.setState({\r\n    //                 isLoaded: true,\r\n    //                 items: json,\r\n    //             })\r\n    //         });\r\n\r\n    // }\r\n\r\n    render() {\r\n\r\n        //     var { isLoaded, items } = this.state;\r\n\r\n        //     if (!isLoaded) {\r\n        //         return <div>Loading</div> \r\n        // }\r\n\r\n\r\n        return (\r\n            <div className=\"App\">\r\n            <h1>Operating Systems</h1>\r\n                <table className=\"table table-list-search\" >\r\n                    <thead>\r\n                        <tr >\r\n\r\n                            <th>Version Name</th>\r\n                            <th>OS Version</th>\r\n                            <th>Created By</th>\r\n                            <th>Created</th>\r\n                            <th>Modified By</th>\r\n                            <th>Modified</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tr>\r\n                        <td>iOS</td>\r\n                        <td>12.1</td>\r\n                        <td>Verser</td>\r\n                        <td>2014-03-17</td>\r\n                        <td>2014-03-17</td>\r\n                        <td>Verser</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Windows</td>\r\n                        <td>5.4</td>\r\n                        <td>Brightstar</td>\r\n                        <td>2014-03-17</td>\r\n                        <td>2014-03-17</td>\r\n                        <td>Brightstar</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Symbian</td>\r\n                        <td>3.8</td>\r\n                        <td>Brightstar</td>\r\n                        <td>2014-03-17</td>\r\n                        <td>2014-03-17</td>\r\n                        <td>Brightstar</td>\r\n                    </tr>\r\n                </table>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\nexport default OperatingSystemsList;","import React, { Component } from \"react\";\r\n// import { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport \"react-tabs/style/react-tabs.css\";\r\n// import React from 'react';\r\nimport SplitterLayout from \"react-splitter-layout\";\r\nimport OperatingSystemsList from \"./OperatingSystemsList\";\r\n\r\nclass OperatingSystems extends Component {\r\n  render() {\r\n    return (\r\n      <SplitterLayout>\r\n        <div>\r\n          <legend>Operating Systems</legend>\r\n          <form>\r\n            <p>\r\n              Select OS:-  \r\n              <input list=\"browsers\" />\r\n              <datalist id=\"browsers\">\r\n                <option value=\"iOS\" />\r\n                <option value=\"Windows\" />\r\n                <option value=\"Symbian\" />\r\n              </datalist>\r\n            </p>\r\n            {/* <hr/>\r\n                        <label className=\"textlabel\" htmlFor=\"countryInput\">Operating Systems:</label>\r\n                                <select>\r\n                                    <option value=\"volvo\">iOS</option>\r\n                                    <option value=\"saab\">Windows</option>\r\n                                    <option value=\"opel\">Symbian</option>\r\n                                </select> */}\r\n          </form>\r\n        </div>\r\n        <div>\r\n          <OperatingSystemsList />\r\n        </div>\r\n      </SplitterLayout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OperatingSystems;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"react-super-responsive-table/dist/SuperResponsiveTableStyle.css\";\r\nimport Pagination from \"./Pagination\";\r\nimport { paginate } from \"../src/Paginate\";\r\nimport _ from \"lodash\";\r\n// import TableHead from './TableHead';\r\n import SearchBox from './common/searchBox';\r\n\r\nclass Plans extends Component {\r\n  state = {\r\n    plans: [],\r\n    searchQuery: \"\",\r\n    currentPage: 1,\r\n    pageSize: 10, //number of records on each page.\r\n    //isLoaded: false\r\n  };\r\n\r\n\r\n // componentDidMount() {\r\n //   fetch(\r\n //     \"https://versergateway.com.au/VerserAssetLeasingServices/MasteData/PlansList\"\r\n  //  )\r\n   //   .then(res => res.json())\r\n    //  .then(json => {\r\n    //    this.setState({\r\n     //     isLoaded: true,\r\n     //     plans: json\r\n     //   });\r\n    //  });\r\n // }\r\n\r\n async componentDidMount(){\r\n  const {data: plans} = await axios.get(\"https://versergateway.com.au/VerserAssetLeasingServices/MasteData/PlansList\");\r\n  this.setState({ plans});\r\n}\r\n\r\n\r\n\r\n\r\n\r\n  // handleDelete = colour => {\r\n  // console.log(colour); //Delete this line to use next 2 lines.\r\n\r\n  //   const colours = this.state.colours.filter(c => c._id !== colour._id);\r\n  //   this.setState({ colours });\r\n  // };\r\n\r\n  delete(plan) {\r\n    const newState = this.state.plans.slice();\r\n    if (newState.indexOf(plan) > -1) {\r\n      newState.splice(newState.indexOf(plan), 1);\r\n      this.setState({ plans: newState });\r\n      console.log(plan);\r\n    }\r\n  }\r\n\r\n  handlePageChange = page => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  handleSearch = query => {\r\n    this.setState({ searchQuery: query, currentPage: 1 }); //selectedGenre: null,\r\n  };\r\n\r\n  // handleSort = sortColumn => {\r\n  //   this.setState({ sortColumn });\r\n  // };\r\n\r\n  getPagedData = () => {\r\n    const {\r\n      pageSize,\r\n      currentPage,\r\n      searchQuery,\r\n      plans: allplans\r\n    } = this.state; //selectedGenre,\r\n\r\n    let filtered = allplans;\r\n    if (searchQuery)\r\n      filtered = allplans.filter(m =>\r\n        m.id.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n      );\r\n\r\n    // else if (selectedGenre && selectedGenre._id)\r\n    //   filtered = allColours.filter(m => m.genre._id === selectedGenre._id);\r\n\r\n    //const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n\r\n    const plans = paginate( currentPage, pageSize);\r\n\r\n    return { totalCount: filtered.length, data: plans };\r\n  };\r\n\r\n  render() {\r\n    const { length: count } = this.state.plans;\r\n    const { pageSize, currentPage, plans: allplans, searchQuery } = this.state;\r\n\r\n    //var { isLoaded, colours } = this.state; //colours is added in the above line\r\n\r\n    if (count === 0) return <p>There are no records in the database.</p>\r\n    \r\n    const plans = paginate( allplans, currentPage, pageSize);\r\n    //const { totalCount } = this.getPagedData();\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {/* <div className=\"App\"> */}\r\n\r\n        {/* <h3> Colours </h3> */}\r\n\r\n        <SearchBox value={searchQuery} onChange={this.handleSearch} />\r\n        <table className=\"table table-list-search\">\r\n          <thead>\r\n            <tr>\r\n              <th>Plan Name</th>\r\n              <th>Monthly Cost</th>\r\n              <th>Contract Length</th>\r\n              <th>Created By</th>\r\n              <th>Created</th>\r\n              <th>Modified By</th>\r\n              <th>Modified</th>\r\n              <th />\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {plans.map(plan => (\r\n              <tr key={plans.id}>\r\n                <td> {plan.planName}</td>\r\n                <td> {plan.monthyCost}</td>\r\n                <td> {plan.contractLength}</td>\r\n                <td> {plan.createdBy}</td>\r\n                <td> {plan.created}</td>\r\n                <td> {plan.modifiedBy}</td>\r\n                <td> {plan.modified}</td>\r\n                <td>\r\n                <button\r\n                    className=\"btn btn-danger btn-sm\"\r\n                    onClick={this.delete.bind(this, plan)}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  {/* <TableHead> <button\r\n                    className=\"btn btn-danger btn-sm\"\r\n                    onClick={this.delete.bind(this, colour)}\r\n                  >\r\n                    Delete\r\n                  </button> </TableHead> */}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n        <Pagination\r\n          itemsCount={count}\r\n          pageSize={pageSize}\r\n          currentPage={currentPage}\r\n          onPageChange={this.handlePageChange}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default Plans;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"react-super-responsive-table/dist/SuperResponsiveTableStyle.css\";\r\nimport Pagination from \"./Pagination\";\r\nimport { paginate } from \"../src/Paginate\";\r\nimport _ from \"lodash\";\r\n// import TableHead from './TableHead';\r\n import SearchBox from './common/searchBox';\r\n\r\nclass Assets extends Component {\r\n  state = {\r\n    assets: [],\r\n    searchQuery: \"\",\r\n    currentPage: 1,\r\n    pageSize: 10, //number of records on each page.\r\n    //isLoaded: false\r\n  };\r\n//  componentDidMount() {\r\n  //  fetch(\"https://versergateway.com.au/VerserAssetLeasingServices/assets/ssn\")\r\n  //    .then(res => res.json())\r\n   //   .then(json => {\r\n   //     this.setState({\r\n     //     isLoaded: true,\r\n     //     assets: json\r\n    //    });\r\n    //  });\r\n // }\r\n\r\n async componentDidMount(){\r\n  const {data: assets} = await axios.get(\"https://versergateway.com.au/VerserAssetLeasingServices/assets/ssn\");\r\n  this.setState({ assets});\r\n}\r\n\r\n\r\n\r\n\r\n\r\n  // handleDelete = colour => {\r\n  // console.log(colour); //Delete this line to use next 2 lines.\r\n\r\n  //   const colours = this.state.colours.filter(c => c._id !== colour._id);\r\n  //   this.setState({ colours });\r\n  // };\r\n\r\n  delete(asset) {\r\n    const newState = this.state.assets.slice();\r\n    if (newState.indexOf(asset) > -1) {\r\n      newState.splice(newState.indexOf(asset), 1);\r\n      this.setState({ assets: newState });\r\n      console.log(asset);\r\n    }\r\n  }\r\n\r\n  handlePageChange = page => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  handleSearch = query => {\r\n    this.setState({ searchQuery: query, currentPage: 1 }); //selectedGenre: null,\r\n  };\r\n\r\n  // handleSort = sortColumn => {\r\n  //   this.setState({ sortColumn });\r\n  // };\r\n\r\n  getPagedData = () => {\r\n    const {\r\n      pageSize,\r\n      currentPage,\r\n      searchQuery,\r\n      assets: allassets\r\n    } = this.state; //selectedGenre,\r\n\r\n    let filtered = allassets;\r\n    if (searchQuery)\r\n      filtered = allassets.filter(m =>\r\n        m.id.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n      );\r\n\r\n    // else if (selectedGenre && selectedGenre._id)\r\n    //   filtered = allColours.filter(m => m.genre._id === selectedGenre._id);\r\n\r\n    //const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n\r\n    const assets = paginate( currentPage, pageSize);\r\n\r\n    return { totalCount: filtered.length, data: assets };\r\n  };\r\n\r\n  render() {\r\n    const { length: count } = this.state.assets;\r\n    const { pageSize, currentPage, assets: allassets, searchQuery } = this.state;\r\n\r\n    //var { isLoaded, colours } = this.state; //colours is added in the above line\r\n\r\n    if (count === 0) return <p>Loading...</p>\r\n    \r\n    const assets = paginate( allassets, currentPage, pageSize);\r\n    //const { totalCount } = this.getPagedData();\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {/* <div className=\"App\"> */}\r\n\r\n        {/* <h3> Colours </h3> */}\r\n\r\n        <SearchBox value={searchQuery} onChange={this.handleSearch} />\r\n        <table className=\"table table-list-search\">\r\n          <thead>\r\n            <tr>\r\n              {/* <th>ID</th> */}\r\n              <th>Asset ID</th>\r\n              <th>Serial No.</th>\r\n              <th>Asset Company</th>\r\n              <th>IMEI</th>\r\n              <th>SIM No.</th>\r\n              <th>Purchase Order No.</th>\r\n              <th>Purchase Date</th>\r\n              <th>Purchase Price</th>\r\n              <th>Decomission Date</th>\r\n              <th>Condition</th>\r\n              <th>Buy Bucket Price</th>\r\n              <th>Aquisition Date</th>\r\n              <th>SPMD</th>\r\n              <th>First Commission Date</th>\r\n              <th>Last Commission Date</th>\r\n              <th>Last Repair Date</th>\r\n              <th>Created By</th>\r\n              <th>Created</th>\r\n              <th>Modified By</th>\r\n              <th>Modified</th>\r\n              <th>Asset Contract</th>\r\n              <th>Asset End User</th>\r\n              <th>Asset Lifecycle Status</th>\r\n              <th>Asset Inventory Item</th>\r\n              <th>Asset OS Version</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {assets.map(asset => (\r\n              <tr key={asset._id}>\r\n                {/* <td> {item.Id}</td> */}\r\n                <td> {asset.AssetID}</td>\r\n                <td> {asset.SerialNo}</td>\r\n                <td> {asset.Asset_Company}</td>\r\n                <td> {asset.IMEI}</td>\r\n                <td> {asset.SIMNo}</td>\r\n                <td> {asset.PurchaseOrderNo}</td>\r\n                <td> {asset.PurchaseDate}</td>\r\n                <td> {asset.PurchasePrice}</td>\r\n                <td> {asset.DecomissionDate}</td>\r\n                <td> {asset.Condition}</td>\r\n                <td> {asset.BuyBackPrice}</td>\r\n                <td> {asset.AquisitionDate}</td>\r\n                <td> {asset.SPMD}</td>\r\n                <td> {asset.FirstCommissionDate}</td>\r\n                <td> {asset.LastCommissionDate}</td>\r\n                <td> {asset.LastRepairDate}</td>\r\n                <td> {asset.createdBy}</td>\r\n                <td> {asset.created}</td>\r\n                <td> {asset.modifiedBy}</td>\r\n                <td> {asset.modified}</td>\r\n                <td> {asset.Asset_Contract}</td>\r\n                <td> {asset.Asset_EndUser}</td>\r\n                <td> {asset.Asset_LifecycleStatus}</td>\r\n                <td> {asset.Asset_InventoryItem}</td>\r\n                <td> {asset.Asset_OSVersion}</td>\r\n                <td>    <button\r\n                    className=\"btn btn-danger btn-sm\"\r\n                    onClick={this.delete.bind(this, asset)}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  {/* <TableHead> <button\r\n                    className=\"btn btn-danger btn-sm\"\r\n                    onClick={this.delete.bind(this, colour)}\r\n                  >\r\n                    Delete\r\n                  </button> </TableHead> */}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n        <Pagination\r\n          itemsCount={count}\r\n          pageSize={pageSize}\r\n          currentPage={currentPage}\r\n          onPageChange={this.handlePageChange}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default Assets;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"react-super-responsive-table/dist/SuperResponsiveTableStyle.css\";\r\nimport Pagination from \"./Pagination\";\r\nimport { paginate } from \"../src/Paginate\";\r\nimport _ from \"lodash\";\r\n// import TableHead from './TableHead';\r\n import SearchBox from './common/searchBox';\r\n\r\nclass EndUsersList extends Component {\r\n  state = {\r\n    EndUsers: [],\r\n    searchQuery: \"\",\r\n    currentPage: 1,\r\n    pageSize: 10, //number of records on each page.\r\n    //isLoaded: false\r\n  };\r\n\r\n // componentDidMount() {\r\n    //fetch(\r\n   //   \"https://versergateway.com.au/VerserAssetLeasingServices/EndUsers/EndUsersList\"\r\n  //  )\r\n  //    .then(res => res.json())\r\n  //    .then(json => {\r\n   //     this.setState({\r\n      //    isLoaded: true,\r\n    //      enduserlist: json\r\n    //    });\r\n   //   });\r\n // }\r\n\r\n async componentDidMount(){\r\n  const {data: EndUsers} = await axios.get(\"https://versergateway.com.au/VerserAssetLeasingServices/EndUsers/EndUsersList\");\r\n  this.setState({ EndUsers});\r\n}\r\n\r\n\r\n\r\n\r\n\r\n  // handleDelete = colour => {\r\n  // console.log(colour); //Delete this line to use next 2 lines.\r\n\r\n  //   const colours = this.state.colours.filter(c => c._id !== colour._id);\r\n  //   this.setState({ colours });\r\n  // };\r\n\r\n  delete(EndUser) {\r\n    const newState = this.state.EndUsers.slice();\r\n    if (newState.indexOf(EndUser) > -1) {\r\n      newState.splice(newState.indexOf(EndUser), 1);\r\n      this.setState({ EndUsers: newState });\r\n      console.log(EndUser);\r\n    }\r\n  }\r\n\r\n  handlePageChange = page => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  handleSearch = query => {\r\n    this.setState({ searchQuery: query, currentPage: 1 }); //selectedGenre: null,\r\n  };\r\n\r\n  // handleSort = sortColumn => {\r\n  //   this.setState({ sortColumn });\r\n  // };\r\n\r\n  getPagedData = () => {\r\n    const {\r\n      pageSize,\r\n      currentPage,\r\n      searchQuery,\r\n      EndUsers: allEndUsers\r\n    } = this.state; //selectedGenre,\r\n\r\n    let filtered = allEndUsers;\r\n    if (searchQuery)\r\n      filtered = allEndUsers.filter(m =>\r\n        m.id.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n      );\r\n\r\n    // else if (selectedGenre && selectedGenre._id)\r\n    //   filtered = allColours.filter(m => m.genre._id === selectedGenre._id);\r\n\r\n    //const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n\r\n    const EndUsers = paginate( currentPage, pageSize);\r\n\r\n    return { totalCount: filtered.length, data: EndUsers };\r\n  };\r\n\r\n  render() {\r\n    const { length: count } = this.state.EndUsers;\r\n    const { pageSize, currentPage, EndUsers: allEndUsers, searchQuery } = this.state;\r\n\r\n    //var { isLoaded, colours } = this.state; //colours is added in the above line\r\n\r\n    if (count === 0) return <p>Loading...</p>\r\n    \r\n    const EndUsers = paginate( allEndUsers, currentPage, pageSize);\r\n    //const { totalCount } = this.getPagedData();\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {/* <div className=\"App\"> */}\r\n\r\n        {/* <h3> Colours </h3> */}\r\n\r\n        <SearchBox value={searchQuery} onChange={this.handleSearch} />\r\n\r\n        <table className=\"table table-list-search\">\r\n          <thead>\r\n            <tr>\r\n              <th>End User Company</th>\r\n              <th>Employee No.</th>\r\n              <th>First Name</th>\r\n              <th>Last Name</th>\r\n              <th>Department</th>\r\n              <th>Cost Code</th>\r\n              <th>End User Status</th>\r\n              <th>Commencement Date</th>\r\n              <th>Termination Date</th>\r\n              <th>User Name</th>\r\n              <th>Created By</th>\r\n              <th>Created</th>\r\n              <th>Modified By</th>\r\n              <th>Modified</th>\r\n              <th>End User Site</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {EndUsers.map(EndUser => (\r\n              <tr key={EndUser._id}>\r\n                <td> {EndUser.endUser_Company}</td>\r\n                <td> {EndUser.employeeNo}</td>\r\n                <td> {EndUser.firstName} </td>\r\n                <td> {EndUser.lastName}</td>\r\n                <td>{EndUser.department}</td>\r\n                <td> {EndUser.costCode}</td>\r\n                <td> {EndUser.endUserStatus}</td>\r\n                <td> {EndUser.commencementDate}</td>\r\n                <td> {EndUser.terminationDate}</td>\r\n                <td> {EndUser.userName}</td>\r\n                <td> {EndUser.createdBy}</td>\r\n                <td> {EndUser.created}</td>\r\n                <td> {EndUser.modifiedBy}</td>\r\n                <td> {EndUser.modified}</td>\r\n                <td> {EndUser.endUser_Site}</td>\r\n                <td>\r\n                  <button\r\n                    className=\"btn btn-danger btn-sm\"\r\n                    onClick={this.delete.bind(this, EndUser)}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  {/* <TableHead> <button\r\n                    className=\"btn btn-danger btn-sm\"\r\n                    onClick={this.delete.bind(this, colour)}\r\n                  >\r\n                    Delete\r\n                  </button> </TableHead> */}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n        <Pagination\r\n          itemsCount={count}\r\n          pageSize={pageSize}\r\n          currentPage={currentPage}\r\n          onPageChange={this.handlePageChange}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default EndUsersList;\r\n","import React, { Component } from \"react\";\r\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\r\nimport \"react-tabs/style/react-tabs.css\";\r\nimport SplitterLayout from \"react-splitter-layout\";\r\nimport Assets from \"./Assets\";\r\nimport EndUsersList from \"./EndUsersList\";\r\nimport axios from \"axios\";\r\nimport { Container, Row, Col } from \"reactstrap\";\r\nclass CreateCompany extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {};\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    //  const data=JSON.stringify(this.state) //new FormData(event.target);\r\n    alert(JSON.stringify(this.state));\r\n    //  var PostData=JSON.stringify(this.state);\r\n    //http://localhost:57390/company/create\r\n    //  mode:\"no-cors\",\r\n    //https://versergateway.com.au/VerserAssetLeasingServices/Company/Create\r\n    fetch(\r\n      \"https://versergateway.com.au/VerserAssetLeasingServices/Company/Create\",\r\n      {\r\n        method: \"POST\",\r\n        cache: \"no-cache\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE\",\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(this.state)\r\n      }\r\n    )\r\n      .then(resp => resp.json())\r\n      .then(function(response) {\r\n        console.info(\"fetch()\", response);\r\n        return response;\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Tabs defaultIndex={0} onSelect={index => console.log(index)}>\r\n          <TabList>\r\n            <Tab autoFocus=\"autofocus\">Company Details</Tab>\r\n            <Tab>Assets</Tab>\r\n            <Tab>End Users</Tab>\r\n            <Tab>Catalogue</Tab>\r\n          </TabList>\r\n          <TabPanel>\r\n            <div className=\"card\">\r\n            <h4>Company Details</h4>\r\n              {/* <section className=\"companydetails\"> */}\r\n              {/* id=\"nav-home-tab\"  */}\r\n              <form\r\n                id=\"submit_job\"\r\n                onSubmit={this.handleSubmit}\r\n                onChange={this.handleChange}\r\n              >\r\n                <fieldset className=\"box\">\r\n                  <Container>\r\n                    {\" \"}\r\n                    <Row>\r\n                      {\" \"}\r\n                      <Col>\r\n                        {\" \"}\r\n                        <p>\r\n                          <label\r\n                            className=\"form-group\"\r\n                            htmlFor=\"firstNameInput\"\r\n                          >\r\n                            Company Name:\r\n                          </label>\r\n                          <input\r\n                            id=\"firstNameInput\"\r\n                            name=\"CompanyName\"\r\n                            type=\"text\"\r\n                            required=\"required\"\r\n                            autoFocus=\"autofocus\"\r\n                            className=\"form-control\"\r\n                          />\r\n                        </p>\r\n                      </Col>\r\n                      <Col>\r\n                        <p>\r\n                          <label\r\n                            className=\"form-group\"\r\n                            htmlFor=\"firstNameInput\"\r\n                          >\r\n                            Address Line1:\r\n                          </label>\r\n                          <input\r\n                            id=\"firstNameInput\"\r\n                            name=\"AddressLine1\"\r\n                            type=\"text\"\r\n                            required=\"required\"\r\n                            className=\"form-control\"\r\n                          />\r\n                        </p>\r\n                      </Col>\r\n                    </Row>{\" \"}\r\n                  \r\n                    {\" \"}\r\n                    <Row>\r\n                      {\" \"}\r\n                      <Col>\r\n                        <p>\r\n                          <label\r\n                            className=\"form-group\"\r\n                            htmlFor=\"firstNameInput\"\r\n                          >\r\n                            Address Line2:\r\n                          </label>\r\n                          <input\r\n                            id=\"firstNameInput\"\r\n                            type=\"text\"\r\n                            name=\"AddressLine2\"\r\n                            className=\"form-control\"\r\n                          />\r\n                        </p>\r\n                      </Col>\r\n                      <Col>\r\n                        <p>\r\n                          <label\r\n                            className=\"form-group\"\r\n                            htmlFor=\"firstNameInput\"\r\n                          >\r\n                            Suburb:\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            name=\"Suburb\"\r\n                            className=\"form-control\"\r\n                          />\r\n                        </p>\r\n                      </Col>\r\n                    </Row>{\" \"}\r\n                  \r\n                    {\" \"}\r\n                    <Row>\r\n                      {\" \"}\r\n                      <Col>\r\n                        <p>\r\n                          <label\r\n                            className=\"form-group\"\r\n                            htmlFor=\"firstNameInput\"\r\n                          >\r\n                            State:\r\n                          </label>\r\n                          <input\r\n                            id=\"firstNameInput\"\r\n                            name=\"State\"\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                          />\r\n                        </p>\r\n                      </Col>\r\n                      <Col>\r\n                        <p>\r\n                          <label className=\"form-group\" htmlFor=\"streetInput\">\r\n                            Postcode:\r\n                          </label>\r\n                          <input\r\n                            id=\"streetInput\"\r\n                            name=\"Postcode\"\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                          />\r\n                        </p>\r\n                      </Col>\r\n                    </Row>{\" \"}\r\n                  \r\n                    {\" \"}\r\n                    <Row>\r\n                      {\" \"}\r\n                      <Col>\r\n                        <p>\r\n                          <label className=\"form-group\" htmlFor=\"numberInput\">\r\n                            Phone:\r\n                          </label>\r\n                          <input\r\n                            id=\"numberInput\"\r\n                            name=\"Phone\"\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                          />\r\n                        </p>\r\n                      </Col>\r\n                      <Col>\r\n                        <p>\r\n                          <label className=\"form-group\" htmlFor=\"cityInput\">\r\n                            Created By:\r\n                          </label>\r\n                          <input\r\n                            id=\"cityInput\"\r\n                            name=\"CreatedBy\"\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            required=\"required\"\r\n                          />\r\n                        </p>\r\n                      </Col>\r\n                    </Row>{\" \"}\r\n                  \r\n                    {\" \"}\r\n                    <Row>\r\n                      {\" \"}\r\n                      <Col>\r\n                        <p>\r\n                          <label className=\"form-group\" htmlFor=\"zipInput\">\r\n                            Email:\r\n                          </label>\r\n                          <input\r\n                            id=\"zipInput\"\r\n                            type=\"email\"\r\n                            className=\"form-control\"\r\n                            name=\"email\"\r\n                          />\r\n                        </p>\r\n                      </Col>\r\n                      <Col>\r\n                        <p>\r\n                          <label className=\"form-group\" htmlFor=\"zipInput\">\r\n                            Service Start Date\r\n                          </label>\r\n                          <input\r\n                            id=\"zipInput\"\r\n                            type=\"date\"\r\n                            className=\"form-control\"\r\n                            required=\"required\"\r\n                            name=\"ServiceStartDate\"\r\n                          />\r\n                        </p>\r\n                      </Col>\r\n                    </Row>{\" \"}\r\n                  \r\n                    {\" \"}\r\n                    <Row>\r\n                      {\" \"}\r\n                      <Col>\r\n                        <p>\r\n                          <label className=\"form-group\" htmlFor=\"zipInput\">\r\n                            Service End Date\r\n                          </label>\r\n                          <input\r\n                            id=\"zipInput\"\r\n                            type=\"date\"\r\n                            className=\"form-control\"\r\n                            required=\"required\"\r\n                            name=\"ServiceEndDate\"\r\n                          />\r\n                        </p>\r\n                      </Col>\r\n                      <Col>\r\n                      <p>\r\n                      <label/></p>\r\n                        <button className=\"btn btn-primary\" type=\"submit\">Submit</button>\r\n                        <button className=\"btn btn-primary\" type=\"reset\">Reset</button>\r\n                        \r\n                      </Col>\r\n                      {/* <Col>\r\n                        <p>\r\n                          <button type=\"submit\">Submit</button>\r\n                          <input type=\"reset\" />\r\n                        </p>\r\n                      </Col> */}\r\n                    </Row>\r\n                  </Container>\r\n                </fieldset>\r\n              </form>\r\n            </div>\r\n            {}\r\n          </TabPanel>\r\n          <TabPanel>\r\n            {\" \"}\r\n            <Assets />\r\n            {}\r\n          </TabPanel>\r\n          <TabPanel>\r\n            <EndUsersList />\r\n          </TabPanel>\r\n\r\n          <TabPanel>\r\n            <SplitterLayout>\r\n              <SplitterLayout secondaryInitialSize={250}>\r\n                <SplitterLayout vertical secondaryInitialSize={750}>\r\n                  <div>\r\n                    <section className=\"companydetails\">\r\n                      <form\r\n                        id=\"nav-home-tab\"\r\n                        action=\"#\"\r\n                        method=\"post\"\r\n                        href=\"#nav-home\"\r\n                        onSubmit={this.handleSubmit}\r\n                      >\r\n                        <fieldset className=\"box\">\r\n                          <p>\r\n                            <label className=\"textlabel\" htmlFor=\"countryInput\">\r\n                              Device Category:\r\n                            </label>\r\n                            <select>\r\n                              <option value=\"volvo\">Handset</option>\r\n                              <option value=\"saab\">Tablet</option>\r\n                              <option value=\"opel\">USB Data</option>\r\n                              <option value=\"opel\">Accessory</option>\r\n                              <option value=\"opel\">SIM</option>\r\n                              <option value=\"opel\">Emerging Devices</option>\r\n                              <option value=\"audi\">Testing Category</option>\r\n                            </select>\r\n                          </p>\r\n                          <p>\r\n                            <label className=\"textlabel\" htmlFor=\"countryInput\">\r\n                              OEM:\r\n                            </label>\r\n                            <select>\r\n                              <option value=\"volvo\">Apple</option>\r\n                              <option value=\"saab\">Samsung</option>\r\n                              <option value=\"opel\">HTC</option>\r\n                              <option value=\"opel\">Telstra</option>\r\n                              <option value=\"opel\">Acer</option>\r\n                              <option value=\"opel\">Blackberry</option>\r\n                              <option value=\"audi\">LG</option>\r\n                              <option value=\"opel\">SONY</option>\r\n                              <option value=\"opel\">Nokia</option>\r\n                              <option value=\"opel\">Sharp</option>\r\n                              <option value=\"audi\">Siemens</option>\r\n                            </select>\r\n                          </p>\r\n                          <p>\r\n                            <label className=\"textlabel\" htmlFor=\"countryInput\">\r\n                              Form Factor:\r\n                            </label>\r\n                            <select>\r\n                              <option value=\"volvo\">Bar</option>\r\n                              <option value=\"saab\">Card</option>\r\n                              <option value=\"opel\">Fixed Gateway</option>\r\n                              <option value=\"opel\">Flip</option>\r\n                              <option value=\"opel\">Laptop</option>\r\n                              <option value=\"opel\">Qwerty</option>\r\n                              <option value=\"audi\">Slide</option>\r\n                              <option value=\"opel\">Tablet</option>\r\n                              <option value=\"opel\">Touch</option>\r\n                              <option value=\"opel\">USB</option>\r\n                              <option value=\"audi\">Basic Phone</option>\r\n                            </select>\r\n                          </p>\r\n                        </fieldset>\r\n                      </form>\r\n                    </section>\r\n                  </div>\r\n                  <SplitterLayout>\r\n                    <div>\r\n                      <h4>Unallocated Inventory Items</h4>\r\n                    </div>\r\n                  </SplitterLayout>\r\n                </SplitterLayout>\r\n              </SplitterLayout>\r\n              <SplitterLayout primaryIndex={1} secondaryInitialSize={250}>\r\n                <div>\r\n                  <h4>Catalogue Items</h4>\r\n                </div>\r\n              </SplitterLayout>\r\n            </SplitterLayout>\r\n            {/* <SplitterLayout>\r\n                            <div>\r\n                                <section className=\"companydetails\">\r\n                                    <form id=\"nav-home-tab\" action=\"#\" method=\"post\" href=\"#nav-home\" onSubmit={this.handleSubmit}>\r\n\r\n                                        <fieldset className=\"box\">\r\n                                            <p>\r\n                                                <label className=\"textlabel\" htmlFor=\"countryInput\">Device Category:</label>\r\n                                                <select>\r\n                                                    <option value=\"volvo\">Handset</option>\r\n                                                    <option value=\"saab\">Tablet</option>\r\n                                                    <option value=\"opel\">USB Data</option>\r\n                                                    <option value=\"opel\">Accessory</option>\r\n                                                    <option value=\"opel\">SIM</option>\r\n                                                    <option value=\"opel\">Emerging Devices</option>\r\n                                                    <option value=\"audi\">Testing Category</option>\r\n                                                </select>\r\n                                            </p>\r\n                                            <p>\r\n                                                <label className=\"textlabel\" htmlFor=\"countryInput\">OEM:</label>\r\n                                                <select>\r\n                                                    <option value=\"volvo\">Apple</option>\r\n                                                    <option value=\"saab\">Samsung</option>\r\n                                                    <option value=\"opel\">HTC</option>\r\n                                                    <option value=\"opel\">Telstra</option>\r\n                                                    <option value=\"opel\">Acer</option>\r\n                                                    <option value=\"opel\">Blackberry</option>\r\n                                                    <option value=\"audi\">LG</option>\r\n                                                    <option value=\"opel\">SONY</option>\r\n                                                    <option value=\"opel\">Nokia</option>\r\n                                                    <option value=\"opel\">Sharp</option>\r\n                                                    <option value=\"audi\">Siemens</option>\r\n                                                </select>\r\n                                            </p>\r\n                                            <p>\r\n                                                <label className=\"textlabel\" htmlFor=\"countryInput\">Form Factor:</label>\r\n                                                <select>\r\n                                                    <option value=\"volvo\">Bar</option>\r\n                                                    <option value=\"saab\">Card</option>\r\n                                                    <option value=\"opel\">Fixed Gateway</option>\r\n                                                    <option value=\"opel\">Flip</option>\r\n                                                    <option value=\"opel\">Laptop</option>\r\n                                                    <option value=\"opel\">Qwerty</option>\r\n                                                    <option value=\"audi\">Slide</option>\r\n                                                    <option value=\"opel\">Tablet</option>\r\n                                                    <option value=\"opel\">Touch</option>\r\n                                                    <option value=\"opel\">USB</option>\r\n                                                    <option value=\"audi\">Basic Phone</option>\r\n                                                </select>\r\n                                            </p>\r\n\r\n                                        </fieldset>\r\n                                    </form>\r\n                                </section>\r\n                            </div>\r\n                            <div>\r\n                                <h3>Catalogue Items</h3>\r\n                            </div>\r\n                        </SplitterLayout> */}\r\n          </TabPanel>\r\n        </Tabs>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateCompany;\r\n","import React, { Component } from \"react\";\r\nimport 'react-super-responsive-table/dist/SuperResponsiveTableStyle.css';\r\n\r\n\r\nclass FormFactors extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: [],\r\n            isLoaded: false,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        fetch('') //No link to fetch\r\n            .then(res => res.json())\r\n            .then(json => {\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    items: json,\r\n                })\r\n            });\r\n\r\n    }\r\n\r\n    render() {\r\n        \r\n            var { isLoaded, items } = this.state;\r\n\r\n    if(!isLoaded) {\r\n      return <div>Loading</div>\r\n    }\r\n\r\n    \r\n    return (\r\n      <div className=\"App\">\r\n   \r\n            {items.map(item => (\r\n\r\n<table className=\"table table-list-search\" >\r\n<thead>\r\n<tr >\r\n  <th>Form Factor Name</th>\r\n  <th>Created By</th>\r\n  <th>created</th>\r\n  <th>Modified By</th>\r\n  <th>Modified</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr> \r\n  <td> {item.colourName} </td>\r\n  <td> {item.createdBy}</td>\r\n  <td> {item.created}</td>\r\n  <td>{item.modifiedBy}</td>\r\n  <td> {item.modified}</td>\r\n</tr>\r\n</tbody>\r\n              </table>\r\n              \r\n            ))}\r\n      \r\n      </div>\r\n    \r\n    );\r\n  }\r\n}\r\nexport default FormFactors;","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"react-super-responsive-table/dist/SuperResponsiveTableStyle.css\";\r\nimport Pagination from \"./Pagination\";\r\nimport { paginate } from \"../src/Paginate\";\r\nimport _ from \"lodash\";\r\n// import TableHead from './TableHead';\r\n import SearchBox from './common/searchBox';\r\n\r\n\r\n\r\n// constructor(props) {\r\n//   super(props);\r\n//   this.state = {   // add above 3 lines instead of \"state ={ \"      and also add \"}\" after    \"isLoaded: false};\"\r\n\r\nclass Colours extends Component {\r\n  state = {\r\n      colours: [],\r\n      searchQuery: \"\",\r\n      currentPage: 1,\r\n      pageSize: 10, //number of records on each page.\r\n      //isLoaded: false\r\n    };\r\n  \r\n\r\n  // componentDidMount() {\r\n  //   fetch(\r\n  //     \"https://versergateway.com.au/VerserAssetLeasingServices/MasteData/Colours\"\r\n  //   )\r\n  //     .then(res => res.json())\r\n  //     .then(json => {\r\n  //       this.setState({\r\n  //         //isLoaded: true,\r\n  //         colours: json\r\n  //       });\r\n  //     });\r\n  // }  this is commmented because using another approach i.e. axios\r\n\r\n  \r\nasync componentDidMount(){\r\n  const {data: colours} = await axios.get(\"https://versergateway.com.au/VerserAssetLeasingServices/MasteData/Colours\");\r\n  this.setState({ colours});\r\n}\r\n\r\n\r\n\r\n\r\n\r\n  // handleDelete = colour => {\r\n  // console.log(colour); //Delete this line to use next 2 lines.\r\n\r\n  //   const colours = this.state.colours.filter(c => c._id !== colour._id);\r\n  //   this.setState({ colours });\r\n  // };\r\n\r\n  delete(colour) {\r\n    const newState = this.state.colours.slice();\r\n    if (newState.indexOf(colour) > -1) {\r\n      newState.splice(newState.indexOf(colour), 1);\r\n      this.setState({ colours: newState });\r\n      console.log(colour);\r\n    }\r\n  }\r\n\r\n  handlePageChange = page => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  handleSearch = query => {\r\n    this.setState({ searchQuery: query, currentPage: 1 }); //selectedGenre: null,\r\n  };\r\n\r\n  // handleSort = sortColumn => {\r\n  //   this.setState({ sortColumn });\r\n  // };\r\n\r\n  getPagedData = () => {\r\n    const {\r\n      pageSize,\r\n      currentPage,\r\n      searchQuery,\r\n      colours: allColours\r\n    } = this.state; //selectedGenre,\r\n\r\n    let filtered = allColours;\r\n    if (searchQuery)\r\n      filtered = allColours.filter(m =>\r\n        m.id.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n      );\r\n\r\n    // else if (selectedGenre && selectedGenre._id)\r\n    //   filtered = allColours.filter(m => m.genre._id === selectedGenre._id);\r\n\r\n    //const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n\r\n    const colours = paginate( currentPage, pageSize);\r\n\r\n    return { totalCount: filtered.length, data: colours };\r\n  };\r\n\r\n  render() {\r\n    const { length: count } = this.state.colours;\r\n    const { pageSize, currentPage, colours: allColours, searchQuery } = this.state;\r\n\r\n    //var { isLoaded, colours } = this.state; //colours is added in the above line\r\n\r\n    if (count === 0) return <p>There are no records in the database.</p>\r\n    \r\n    const colours = paginate( allColours, currentPage, pageSize);\r\n    //const { totalCount } = this.getPagedData();\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {/* <div className=\"App\"> */}\r\n\r\n        {/* <h3> Colours </h3> */}\r\n\r\n        <SearchBox value={searchQuery} onChange={this.handleSearch} />\r\n\r\n        <table className=\"table table-list-search\">\r\n          <thead>\r\n            <tr>\r\n              <th>Colour Name</th>\r\n              <th>Created By</th>\r\n              <th>Created</th>\r\n              <th>Modified By</th>\r\n              <th>Modified</th>\r\n              <th />\r\n            </tr>\r\n          </thead>\r\n          <tbody> \r\n            {colours.map(colour => (\r\n              <tr key={colour.id}> \r\n                <td> {colour.colourName}</td> \r\n                <td> {colour.createdBy}</td>\r\n                <td> {colour.created}</td>\r\n                <td> {colour.modifiedBy}</td>\r\n                <td> {colour.modified}</td>\r\n                <td>\r\n                  <button\r\n                    className=\"btn btn-danger btn-sm\"\r\n                    onClick={this.delete.bind(this, colour)}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  {/* <TableHead> <button\r\n                    className=\"btn btn-danger btn-sm\"\r\n                    onClick={this.delete.bind(this, colour)}\r\n                  >\r\n                    Delete\r\n                  </button> </TableHead> */}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n        <Pagination\r\n          itemsCount={count}\r\n          pageSize={pageSize}\r\n          currentPage={currentPage}\r\n          onPageChange={this.handlePageChange}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default Colours;\r\n","// import React, { Component } from 'react';\r\n// import { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\n// import \"react-tabs/style/react-tabs.css\";\r\nimport React, { Component } from \"react\";\r\nimport \"react-tabs/style/react-tabs.css\";\r\nimport { Container, Row, Col } from \"reactstrap\";\r\nimport axios from \"axios\";\r\n\r\nclass NewContract extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {};\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  }\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    fetch(\r\n      \"https://versergateway.com.au/VerserAssetLeasingServices/NewContract/CreateNewContract\",\r\n      {\r\n        method: \"POST\",\r\n        cache: \"no-cache\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE\",\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(this.state)\r\n      }\r\n    )\r\n      .then(resp => resp.json())\r\n      .then(function(response) {\r\n        console.info(\"fetch()\", response);\r\n        return response;\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"card\">\r\n        <h4>Create New Contract </h4>\r\n        <form\r\n          id=\"submit_job\"\r\n          action=\"#\"\r\n          method=\"post\"\r\n          href=\"#nav-home\"\r\n          onChange={this.handleChange}\r\n          onSubmit={this.handleSubmit}\r\n        >\r\n          <Container>\r\n            <p>\r\n              <label className=\"form-group\" htmlFor=\"firstNameInput\">\r\n                Start Date:\r\n              </label>\r\n              <input\r\n                name=\"StartDate\"\r\n                type=\"date\"\r\n                required=\"required\"\r\n                autoFocus=\"autofocus\"\r\n                className=\"form-control\"\r\n              />\r\n            </p>\r\n            <p>\r\n              <label className=\"form-group\" htmlFor=\"firstNameInput\">\r\n                End Date:\r\n              </label>\r\n              <input\r\n                name=\"EndDate\"\r\n                type=\"date\"\r\n                required=\"required\"\r\n                autoFocus=\"autofocus\"\r\n                className=\"form-control\"\r\n              />\r\n            </p>\r\n            <p>\r\n              <label className=\"form-group\" htmlFor=\"firstNameInput\">\r\n                Service No:\r\n              </label>\r\n              <input\r\n                name=\"ServiceNo\"\r\n                type=\"text\"\r\n                required=\"required\"\r\n                autoFocus=\"autofocus\"\r\n                className=\"form-control\"\r\n              />\r\n            </p>\r\n            <p>\r\n              <label className=\"form-group\" htmlFor=\"firstNameInput\">\r\n                Contract Company:\r\n              </label>\r\n              <input\r\n                name=\"Contract_Company\"\r\n                type=\"text\"\r\n                required=\"required\"\r\n                autoFocus=\"autofocus\"\r\n                className=\"form-control\"\r\n              />\r\n            </p>\r\n            <p>\r\n              <label className=\"form-group\" htmlFor=\"firstNameInput\">\r\n                Contract EndUser:\r\n              </label>\r\n              <input\r\n                name=\"Contract_EndUser\"\r\n                type=\"text\"\r\n                required=\"required\"\r\n                autoFocus=\"autofocus\"\r\n                className=\"form-control\"\r\n              />\r\n            </p>\r\n            <p>\r\n              <label className=\"form-group\" htmlFor=\"firstNameInput\">\r\n                Contract Plan:\r\n              </label>\r\n              <input\r\n                name=\"Contract_Plan\"\r\n                type=\"text\"\r\n                required=\"required\"\r\n                autoFocus=\"autofocus\"\r\n                className=\"form-control\"\r\n              />\r\n            </p>\r\n            <br/>\r\n            <br/>\r\n            <p>\r\n              <button className=\"btn btn-primary\" type=\"submit\">\r\n                Submit\r\n              </button>\r\n              <button className=\"btn btn-primary\" type=\"reset\">\r\n                Reset\r\n              </button>\r\n            </p>\r\n          </Container>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewContract;\r\n","import React, { Component } from \"react\";\r\n// import { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport \"react-tabs/style/react-tabs.css\";\r\nimport { Container, Row, Col } from \"reactstrap\";\r\n\r\nclass CreateEndUser extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {};\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  }\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    fetch(\r\n      \"https://versergateway.com.au/VerserAssetLeasingServices/CreateEndUsers/create\",\r\n      {\r\n        method: \"POST\",\r\n        cache: \"no-cache\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE\",\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(this.state)\r\n      }\r\n    )\r\n      .then(resp => resp.json())\r\n      .then(function(response) {\r\n        console.info(\"fetch()\", response);\r\n        return response;\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"card\">\r\n      <h4>Create End User</h4>\r\n        <form\r\n          id=\"submit_job\"\r\n          method=\"post\"\r\n          onChange={this.handleChange}\r\n          onSubmit={this.handleSubmit}\r\n        >\r\n          <fieldset className=\"box\">\r\n            <Container>\r\n              {\" \"}\r\n              <Row>\r\n                {\" \"}\r\n                <Col>\r\n                  <p>\r\n                    <label className=\"form-group\" htmlFor=\"firstNameInput\">\r\n                      First Name:\r\n                    </label>\r\n                    <input\r\n                      id=\"firstNameInput\"\r\n                      name=\"firstName\"\r\n                      type=\"text\"\r\n                      required=\"required\"\r\n                      autoFocus=\"autofocus\"\r\n                      className=\"form-control\"\r\n                    />\r\n                  </p>\r\n                </Col>{\" \"}\r\n                <Col>\r\n                  <p>\r\n                    <label className=\"form-group\" htmlFor=\"firstNameInput\">\r\n                      Last Name:\r\n                    </label>\r\n                    <input\r\n                      id=\"firstNameInput\"\r\n                      name=\"lastName\"\r\n                      type=\"text\"\r\n                      required=\"required\"\r\n                      className=\"form-control\"\r\n                    />\r\n                  </p>\r\n                </Col>\r\n              </Row>{\" \"}\r\n            </Container>\r\n            <Container>\r\n              {\" \"}\r\n              <Row>\r\n                {\" \"}\r\n                <Col>\r\n                  {\" \"}\r\n                  <p>\r\n                    <label className=\"form-group\" htmlFor=\"firstNameInput\">\r\n                      Employee No:\r\n                    </label>\r\n                    <input\r\n                      id=\"firstNameInput\"\r\n                      name=\"employeeNo\"\r\n                      type=\"text\"\r\n                      required=\"required\"\r\n                      className=\"form-control\"\r\n                    />\r\n                  </p>\r\n                </Col>{\" \"}\r\n                <Col>\r\n                  <p>\r\n                    <label className=\"form-group\" htmlFor=\"firstNameInput\">\r\n                      Department:\r\n                    </label>\r\n                    <input\r\n                      id=\"firstNameInput\"\r\n                      name=\"department\"\r\n                      type=\"text\"\r\n                      required=\"required\"\r\n                      className=\"form-control\"\r\n                    />\r\n                  </p>\r\n                </Col>\r\n              </Row>{\" \"}\r\n            </Container>\r\n            <Container>\r\n              {\" \"}\r\n              <Row>\r\n                {\" \"}\r\n                <Col>\r\n                  {\" \"}\r\n                  <p>\r\n                    <label className=\"form-group\" htmlFor=\"firstNameInput\">\r\n                      Cost Code:\r\n                    </label>\r\n                    <input\r\n                      id=\"firstNameInput\"\r\n                      name=\"costCode\"\r\n                      type=\"text\"\r\n                      required=\"required\"\r\n                      className=\"form-control\"\r\n                    />\r\n                  </p>\r\n                </Col>{\" \"}\r\n                <Col>\r\n                  <p>\r\n                    <label className=\"form-group\" htmlFor=\"firstNameInput\">\r\n                      End User Status:\r\n                    </label>\r\n                    <input\r\n                      id=\"firstNameInput\"\r\n                      name=\"endUserStatus\"\r\n                      type=\"text\"\r\n                      required=\"required\"\r\n                      className=\"form-control\"\r\n                    />\r\n                  </p>\r\n                </Col>\r\n              </Row>{\" \"}\r\n            </Container>\r\n            <Container>\r\n              {\" \"}\r\n              <Row>\r\n                {\" \"}\r\n                <Col>\r\n                  {\" \"}\r\n                  <p>\r\n                    <label className=\"form-group\" htmlFor=\"firstNameInput\">\r\n                      Commencement Date:\r\n                    </label>\r\n                    <input\r\n                      id=\"firstNameInput\"\r\n                      name=\"commencementDate\"\r\n                      type=\"date\"\r\n                      required=\"required\"\r\n                      className=\"form-control\"\r\n                    />\r\n                  </p>\r\n                </Col>{\" \"}\r\n                <Col>\r\n                  <p>\r\n                    <label className=\"form-group\" htmlFor=\"firstNameInput\">\r\n                      Termination Date:\r\n                    </label>\r\n                    <input\r\n                      id=\"firstNameInput\"\r\n                      name=\"terminationDate\"\r\n                      type=\"date\"\r\n                      required=\"required\"\r\n                      className=\"form-control\"\r\n                    />\r\n                  </p>{\" \"}\r\n                </Col>\r\n              </Row>{\" \"}\r\n            </Container>\r\n            <Container>\r\n              {\" \"}\r\n              <Row>\r\n                {\" \"}\r\n                <Col>\r\n                  <p>\r\n                    <label className=\"form-group\" htmlFor=\"firstNameInput\">\r\n                      Last Commission Date:\r\n                    </label>\r\n                    <input\r\n                      id=\"firstNameInput\"\r\n                      name=\"LastCommissionDate\"\r\n                      type=\"date\"\r\n                      required=\"required\"\r\n                      className=\"form-control\"\r\n                    />\r\n                  </p>\r\n                </Col>{\" \"}\r\n                <Col>\r\n                  <p>\r\n                    <label className=\"form-group\" htmlFor=\"firstNameInput\">\r\n                      User Name:\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"userName\"\r\n                      className=\"form-control\"\r\n                    />\r\n                  </p>\r\n                </Col>\r\n              </Row>{\" \"}\r\n            </Container>\r\n            <Container>\r\n              {\" \"}\r\n              <Row>\r\n                {\" \"}\r\n                <Col>\r\n                  {\" \"}\r\n                  <p>\r\n                    <label className=\"form-group\" htmlFor=\"firstNameInput\">\r\n                      Created By:\r\n                    </label>\r\n                    <input\r\n                      id=\"firstNameInput\"\r\n                      name=\"createdBy\"\r\n                      type=\"text\"\r\n                      required=\"required\"\r\n                      className=\"form-control\"\r\n                    />\r\n                  </p>\r\n                </Col>{\" \"}\r\n                <Col>\r\n                  <p>\r\n                    <label className=\"form-group\" htmlFor=\"firstNameInput\">\r\n                      Created:\r\n                    </label>\r\n                    <input\r\n                      type=\"date\"\r\n                      name=\"created\"\r\n                      className=\"form-control\"\r\n                    />\r\n                  </p>\r\n                </Col>\r\n              </Row>{\" \"}\r\n            </Container>\r\n            <Container>\r\n              {\" \"}\r\n              <Row>\r\n                {\" \"}\r\n                <Col>\r\n                  {\" \"}\r\n                  <p>\r\n                    <label className=\"form-group\" htmlFor=\"firstNameInput\">\r\n                      Modified By:\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"modifiedBy\"\r\n                      className=\"form-control\"\r\n                    />\r\n                  </p>\r\n                </Col>{\" \"}\r\n                <Col>\r\n                  <p>\r\n                    <label className=\"form-group\" htmlFor=\"firstNameInput\">\r\n                      Modified:\r\n                    </label>\r\n                    <input\r\n                      id=\"firstNameInput\"\r\n                      name=\"modified\"\r\n                      type=\"date\"\r\n                      required=\"required\"\r\n                      className=\"form-control\"\r\n                    />\r\n                  </p>{\" \"}\r\n                </Col>\r\n              </Row>{\" \"}\r\n            </Container>\r\n            <Container>\r\n              {\" \"}\r\n              <Row>\r\n                {\" \"}\r\n                <Col>\r\n                  <p>\r\n                    <label className=\"form-group\" htmlFor=\"firstNameInput\">\r\n                      End User Company:\r\n                    </label>\r\n                    <input\r\n                      id=\"firstNameInput\"\r\n                      name=\"endUser_Company\"\r\n                      type=\"text\"\r\n                      required=\"required\"\r\n                      className=\"form-control\"\r\n                    />\r\n                  </p>\r\n                </Col>\r\n                <Col>\r\n                  <p>\r\n                    <label className=\"form-group\" htmlFor=\"firstNameInput\">\r\n                      End User Site:\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"endUser_Site\"\r\n                      className=\"form-control\"\r\n                    />\r\n                  </p>\r\n                  <br/>\r\n                  <br/>\r\n                  <p>\r\n                    <button className=\"btn btn-primary\" type=\"submit\">\r\n                      Submit\r\n                    </button>\r\n                    <button className=\"btn btn-primary\" type=\"reset\">\r\n                      Reset\r\n                    </button>\r\n                  </p>{\" \"}\r\n                </Col>\r\n              </Row>{\" \"}\r\n            </Container>\r\n          </fieldset>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateEndUser;\r\n","import React, { Component } from \"react\";\r\n// import { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport \"react-tabs/style/react-tabs.css\";\r\nimport { Container, Row, Col } from \"reactstrap\";\r\nimport axios from \"axios\";\r\nclass CreateNewAssets extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {};\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  }\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    fetch(\r\n      \"https://versergateway.com.au/VerserAssetLeasingServices/assets/CreateNewAsset\",\r\n      {\r\n        method: \"POST\",\r\n        cache: \"no-cache\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE\",\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(this.state)\r\n      }\r\n    )\r\n      .then(resp => resp.json())\r\n      .then(function(response) {\r\n        console.info(\"fetch()\", response);\r\n        return response;\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"card\">\r\n        <h4>Create New Assets </h4>\r\n\r\n        <form\r\n          id=\"submit_job\"\r\n          action=\"#\"\r\n          method=\"post\"\r\n          href=\"#nav-home\"\r\n          onChange={this.handleChange}\r\n          onSubmit={this.handleSubmit}\r\n        >\r\n          <fieldset className=\"box\">\r\n            <Container>\r\n              <Row>\r\n                <Col>\r\n                  {\" \"}\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"firstNameInput\">Asset ID:</label>\r\n                    <input\r\n                      id=\"firstNameInput\"\r\n                      name=\"AssetID\"\r\n                      type=\"text\"\r\n                      required=\"required\"\r\n                      autoFocus=\"autofocus\"\r\n                      className=\"form-control\"\r\n                    />\r\n                  </div>\r\n                </Col>\r\n                <Col>\r\n                  {\" \"}\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"firstNameInput\">Asset Company:</label>\r\n                    <input\r\n                      id=\"firstNameInput\"\r\n                      name=\"Asset_Company\"\r\n                      type=\"text\"\r\n                      required=\"required\"\r\n                      className=\"form-control\"\r\n                    />\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              </Container>\r\n            <Container>\r\n              <Row>\r\n                <Col>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"firstNameInput\">Asset Contract:</label>\r\n                    <input\r\n                      id=\"firstNameInput\"\r\n                      name=\"Asset_Contract\"\r\n                      type=\"text\"\r\n                      required=\"required\"\r\n                      className=\"form-control\"\r\n                    />\r\n                  </div>\r\n                </Col>\r\n                <Col>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"firstNameInput\">IMEI:</label>\r\n                    <input\r\n                      id=\"firstNameInput\"\r\n                      name=\"IMEI\"\r\n                      type=\"text\"\r\n                      required=\"required\"\r\n                      className=\"form-control\"\r\n                    />\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              </Container>\r\n            <Container>\r\n              <Row>\r\n                <Col>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"firstNameInput\">Serial No:</label>\r\n                    <input\r\n                      id=\"firstNameInput\"\r\n                      name=\"SerialNo\"\r\n                      type=\"text\"\r\n                      required=\"required\"\r\n                      className=\"form-control\"\r\n                    />\r\n                  </div>\r\n                </Col>\r\n                <Col>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"firstNameInput\">SIM No:</label>\r\n                    <input\r\n                      id=\"firstNameInput\"\r\n                      name=\"SIMNo\"\r\n                      type=\"text\"\r\n                      required=\"required\"\r\n                      className=\"form-control\"\r\n                    />\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              </Container>\r\n            <Container>\r\n              <Row>\r\n                <Col>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"firstNameInput\">SPMD:</label>\r\n                    <input\r\n                      id=\"firstNameInput\"\r\n                      name=\"SPMD\"\r\n                      type=\"text\"\r\n                      required=\"required\"\r\n                      className=\"form-control\"\r\n                    />\r\n                  </div>\r\n                </Col>\r\n                <Col>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"firstNameInput\">\r\n                      First Commission Date:\r\n                    </label>\r\n                    <input\r\n                      id=\"firstNameInput\"\r\n                      name=\"FirstCommissionDate\"\r\n                      type=\"date\"\r\n                      required=\"required\"\r\n                      className=\"form-control\"\r\n                    />\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              </Container>\r\n            <Container>\r\n              <Row>\r\n                <Col>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"firstNameInput\">\r\n                      Last Commission Date:\r\n                    </label>\r\n                    <input\r\n                      id=\"firstNameInput\"\r\n                      name=\"LastCommissionDate\"\r\n                      type=\"date\"\r\n                      required=\"required\"\r\n                      className=\"form-control\"\r\n                    />\r\n                  </div>\r\n                </Col>\r\n                <Col>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"firstNameInput\">Buy-Back Price:</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"BuyBackPrice\"\r\n                      className=\"form-control\"\r\n                    />\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              </Container>\r\n            <Container>\r\n              <Row>\r\n                <Col>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"firstNameInput\">Purchase Order No:</label>\r\n                    <input\r\n                      id=\"firstNameInput\"\r\n                      name=\"PurchaseOrderNo\"\r\n                      type=\"text\"\r\n                      required=\"required\"\r\n                      className=\"form-control\"\r\n                    />\r\n                  </div>\r\n                </Col>\r\n                <Col>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"firstNameInput\">Purchase Date:</label>\r\n                    <input\r\n                      type=\"date\"\r\n                      name=\"PurchaseDate\"\r\n                      className=\"form-control\"\r\n                    />\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              </Container>\r\n            <Container>\r\n              <Row>\r\n                <Col>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"firstNameInput\">Condition:</label>\r\n\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"Condition\"\r\n                      className=\"form-control\"\r\n                    />\r\n                  </div>\r\n                </Col>\r\n                <Col>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"firstNameInput\">Aquisition Date:</label>\r\n                    <input\r\n                      id=\"firstNameInput\"\r\n                      name=\"AquisitionDate\"\r\n                      type=\"date\"\r\n                      required=\"required\"\r\n                      className=\"form-control\"\r\n                    />\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              </Container>\r\n            <Container>\r\n              <Row>\r\n                <Col>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"firstNameInput\">End User:</label>\r\n                    <input\r\n                      id=\"firstNameInput\"\r\n                      name=\"Asset_EndUser\"\r\n                      type=\"text\"\r\n                      required=\"required\"\r\n                      className=\"form-control\"\r\n                    />\r\n                  </div>\r\n                </Col>\r\n                <Col>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"firstNameInput\">Inventory Item:</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"Asset_InventoryItem\"\r\n                      className=\"form-control\"\r\n                    />\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              </Container>\r\n            <Container>\r\n              <Row>\r\n                <Col>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"firstNameInput\">Lifecycle Status:</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"Asset_LifecycleStatus\"\r\n                      className=\"form-control\"\r\n                    />\r\n                  </div>\r\n                </Col>\r\n\r\n                <Col>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"firstNameInput\">OS Version:</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"Asset_OSVersion\"\r\n                      className=\"form-control\"\r\n                    />\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              </Container>\r\n            <Container>\r\n              <Row>\r\n                <Col>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"firstNameInput\">Create By:</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"CreateBy\"\r\n                      className=\"form-control\"\r\n                    />\r\n                  </div>\r\n                </Col>\r\n                <Col>\r\n                  <p>\r\n                    <label />\r\n                  </p>\r\n                  <button className=\"btn btn-primary\" type=\"submit\">\r\n                    Submit\r\n                  </button>\r\n                  <button className=\"btn btn-primary\" type=\"reset\">\r\n                    Reset\r\n                  </button>\r\n                </Col>\r\n              </Row>{\" \"}\r\n            </Container>\r\n          </fieldset>\r\n\r\n          {/* <button type=\"submit\">Submit</button> */}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateNewAssets;\r\n","//created for test purpose, showing entered data in the state for console,\r\n// need to fix how to attache POST method to this code.\r\n//\"joi-npm\" is not installed, if installed in the future, remove comments for > schema ={...};\r\n//import Joi from \"joi-browser\";\r\n\r\nimport React, { Component } from \"react\";\r\n\r\nclass CreateCompanyTest extends Component {\r\n  state = {\r\n    company: {\r\n      companyName: \"\",\r\n      AddressLine1: \"\",\r\n      AddressLine2: \"\",\r\n      Suburb: \"\",\r\n      State: \"\",\r\n      Postcode: \"\",\r\n      Phone: \"\",\r\n      CreatedBy: \"\",\r\n      Email: \"\",\r\n      ServiceStartDate: \"\",\r\n      ServiceEndDate: \"\"\r\n    }\r\n  };\r\n\r\n  //   schema = {\r\n  //     username: Joi.string()\r\n  //       .required()\r\n  //       .email()\r\n  //       .label(\"Username\"),\r\n  //     password: Joi.string()\r\n  //       .required()\r\n  //       .min(5)\r\n  //       .label(\"Password\")\r\n  //   };\r\n\r\n  validate = () => {\r\n    const errors = {};\r\n\r\n    const { company } = this.state;\r\n\r\n    if (company.companyName.trim() === \"\")\r\n      errors.companyName = \"companyName is required\";\r\n\r\n    if (company.AddressLine1.trim() === \"\")\r\n      errors.AddressLine1 = \"AddressLine1 is required\";\r\n\r\n    if (company.AddressLine2.trim() === \"\")\r\n      errors.AddressLine2 = \"AddressLine2 is required\";\r\n\r\n    if (company.Suburb.trim() === \"\") errors.Suburb = \"Suburb is required\";\r\n\r\n    if (company.State.trim() === \"\") errors.State = \"State is required\";\r\n\r\n    if (company.Postcode.trim() === \"\")\r\n      errors.Postcode = \"Postcode is required\";\r\n\r\n    if (company.Phone.trim() === \"\") errors.Phone = \"Phone is required\";\r\n\r\n    if (company.CreatedBy.trim() === \"\")\r\n      errors.CreatedBy = \"CreatedBy value is required\";\r\n\r\n    if (company.Email.trim() === \"\") errors.Email = \"Email is required\";\r\n\r\n    if (company.ServiceStartDate.trim() === \"\")\r\n      errors.ServiceStartDate = \"ServiceStartDate is required\";\r\n\r\n    if (company.ServiceEndDate.trim() === \"\")\r\n      errors.ServiceEndDate = \"ServiceEndDate is required\";\r\n\r\n    return Object.keys(errors).length === 0 ? null : errors;\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const errors = this.validate();\r\n    console.log(errors);\r\n    this.setState({ errors });\r\n    if (errors) return;\r\n\r\n    //call the server\r\n    console.log(\"Submitted\");\r\n  };\r\n\r\n  handleChange = ({ currentTarget: input }) => {\r\n    const company = { ...this.state.company };\r\n    company[input.name] = input.value;\r\n    this.setState({ company });\r\n  };\r\n\r\n  render() {\r\n    const { company } = this.state;\r\n\r\n    return (\r\n      <section className=\"form-elegant\">\r\n        <div className=\"card\">\r\n          <div className=\"card-body mx-4\">\r\n            <h4>Create Company Sample Form </h4>\r\n            <form onSubmit={this.handleSubmit}>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"companyName\">Company Name</label>\r\n                <input\r\n                  value={company.companyName}\r\n                  onChange={this.handleChange}\r\n                  id=\"companyName\"\r\n                  name=\"companyName\"\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"password\">Address Line1</label>\r\n                <input\r\n                  value={company.AddressLine1}\r\n                  onChange={this.handleChange}\r\n                  id=\"AddressLine1\"\r\n                  name=\"AddressLine1\"\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"password\">Address Line2</label>\r\n                <input\r\n                  value={company.AddressLine2}\r\n                  onChange={this.handleChange}\r\n                  id=\"AddressLine2\"\r\n                  name=\"AddressLine2\"\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"password\">Suburb</label>\r\n                <input\r\n                  value={company.Suburb}\r\n                  onChange={this.handleChange}\r\n                  id=\"Suburb\"\r\n                  name=\"Suburb\"\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"password\">State</label>\r\n                <input\r\n                  value={company.State}\r\n                  onChange={this.handleChange}\r\n                  id=\"State\"\r\n                  name=\"State\"\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"password\">Postcode</label>\r\n                <input\r\n                  value={company.Postcode}\r\n                  onChange={this.handleChange}\r\n                  id=\"Postcode\"\r\n                  name=\"Postcode\"\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"password\">Phone</label>\r\n                <input\r\n                  value={company.Phone}\r\n                  onChange={this.handleChange}\r\n                  id=\"Phone\"\r\n                  name=\"Phone\"\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"password\">Created By</label>\r\n                <input\r\n                  value={company.CreatedBy}\r\n                  onChange={this.handleChange}\r\n                  id=\"CreatedBy\"\r\n                  name=\"CreatedBy\"\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"password\">Email</label>\r\n                <input\r\n                  value={company.Email}\r\n                  onChange={this.handleChange}\r\n                  id=\"Email\"\r\n                  name=\"Email\"\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"password\">Service Start Date</label>\r\n                <input\r\n                  value={company.ServiceStartDate}\r\n                  onChange={this.handleChange}\r\n                  id=\"ServiceStartDate\"\r\n                  name=\"ServiceStartDate\"\r\n                  type=\"date\"\r\n                  className=\"form-control\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"password\">Service End Date</label>\r\n                <input\r\n                  value={company.ServiceEndDate}\r\n                  onChange={this.handleChange}\r\n                  id=\"ServiceEndDate\"\r\n                  name=\"ServiceEndDate\"\r\n                  type=\"date\"\r\n                  className=\"form-control\"\r\n                />\r\n              </div>\r\n              <button disabled={this.validate()} className=\"btn btn-primary\">\r\n                Submit\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateCompanyTest;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"react-super-responsive-table/dist/SuperResponsiveTableStyle.css\";\r\nimport Pagination from \"./Pagination\";\r\nimport { paginate } from \"../src/Paginate\";\r\nimport _ from \"lodash\";\r\n// import TableHead from './TableHead';\r\n import SearchBox from './common/searchBox';\r\n\r\nclass CompanyList extends Component {\r\n  state = {\r\n    comapnylists: [],\r\n    searchQuery: \"\",\r\n    currentPage: 1,\r\n    pageSize: 10, //number of records on each page.\r\n    //isLoaded: false\r\n  };\r\n\r\n\r\n // componentDidMount() {\r\n  //  fetch(\r\n   //   \"https://versergateway.com.au/VerserAssetLeasingServices/Company/CompanyList\"\r\n   // )\r\n   //   .then(res => res.json())\r\n   //   .then(json => {\r\n    //    this.setState({\r\n     //     isLoaded: true,\r\n     //     companys: json\r\n      //  });\r\n     // });\r\n// }\r\n\r\nasync componentDidMount(){\r\n  const {data: comapnylists} = await axios.get(\"https://versergateway.com.au/VerserAssetLeasingServices/Company/CompanyList\");\r\n  this.setState({ comapnylists});\r\n}\r\n\r\n\r\n\r\n\r\n\r\n  // handleDelete = colour => {\r\n  // console.log(colour); //Delete this line to use next 2 lines.\r\n\r\n  //   const colours = this.state.colours.filter(c => c._id !== colour._id);\r\n  //   this.setState({ colours });\r\n  // };\r\n\r\n  delete(comapnylist) {\r\n    const newState = this.state.comapnylists.slice();\r\n    if (newState.indexOf(comapnylist) > -1) {\r\n      newState.splice(newState.indexOf(comapnylist), 1);\r\n      this.setState({ comapnylists: newState });\r\n      console.log(comapnylist);\r\n    }\r\n  }\r\n\r\n  handlePageChange = page => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  handleSearch = query => {\r\n    this.setState({ searchQuery: query, currentPage: 1 }); //selectedGenre: null,\r\n  };\r\n\r\n  // handleSort = sortColumn => {\r\n  //   this.setState({ sortColumn });\r\n  // };\r\n\r\n  getPagedData = () => {\r\n    const {\r\n      pageSize,\r\n      currentPage,\r\n      searchQuery,\r\n      comapnylists: allcomapnylists\r\n    } = this.state; //selectedGenre,\r\n\r\n    let filtered = allcomapnylists;\r\n    if (searchQuery)\r\n      filtered = allcomapnylists.filter(m =>\r\n        m.id.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n      );\r\n\r\n    // else if (selectedGenre && selectedGenre._id)\r\n    //   filtered = allColours.filter(m => m.genre._id === selectedGenre._id);\r\n\r\n    //const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n\r\n    const comapnylists = paginate( currentPage, pageSize);\r\n\r\n    return { totalCount: filtered.length, data: comapnylists };\r\n  };\r\n\r\n  render() {\r\n    const { length: count } = this.state.comapnylists;\r\n    const { pageSize, currentPage, comapnylists: allcomapnylists, searchQuery } = this.state;\r\n\r\n    //var { isLoaded, colours } = this.state; //colours is added in the above line\r\n\r\n    if (count === 0) return <p>Loading...</p>\r\n    \r\n    const comapnylists = paginate( allcomapnylists, currentPage, pageSize);\r\n    //const { totalCount } = this.getPagedData();\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {/* <div className=\"App\"> */}\r\n\r\n        {/* <h3> Colours </h3> */}\r\n\r\n        <SearchBox value={searchQuery} onChange={this.handleSearch} />\r\n        \r\n        <table className=\"table table-list-search\">\r\n          <thead>\r\n            <tr>\r\n              <th>Carrier Name</th>\r\n              <th>Created By</th>\r\n              <th>Created</th>\r\n              <th>Modified By</th>\r\n              <th>Modified</th>\r\n              <th />\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {comapnylists.map(comapnylist => (\r\n              <tr key={comapnylist.id}>\r\n                <td> {comapnylist.carrierName} </td>\r\n                <td> {comapnylist.createdBy}</td>\r\n                <td> {comapnylist.created}</td>\r\n                <td>{comapnylist.modifiedBy}</td>\r\n                <td> {comapnylist.modified}</td>\r\n                <td>\r\n                <button\r\n                    className=\"btn btn-danger btn-sm\"\r\n                    onClick={this.delete.bind(this, comapnylist)}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  {/* <TableHead> <button\r\n                    className=\"btn btn-danger btn-sm\"\r\n                    onClick={this.delete.bind(this, colour)}\r\n                  >\r\n                    Delete\r\n                  </button> </TableHead> */}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n        <Pagination\r\n          itemsCount={count}\r\n          pageSize={pageSize}\r\n          currentPage={currentPage}\r\n          onPageChange={this.handlePageChange}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default CompanyList;\r\n","import React from \"react\";\r\n\r\nconst Input = ({ name, label, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label} </label>\r\n      <input {...rest} name={name} id={name} className=\"form-control\" />\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","//this is login form\r\n\r\nimport React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\n\r\nclass LoginForm extends Form {\r\n  state = {\r\n    data: { username: \"\", password: \"\" },\r\n    errors: {}\r\n  };\r\n\r\n  schema = {\r\n    username: Joi.string()\r\n      .required()\r\n      .label(\"Username\"),\r\n      password: Joi.string()\r\n      .required()\r\n      .min(5)\r\n      .label(\"Password\")\r\n  };\r\n\r\n  doSubmit = () => {\r\n    //call the server\r\n    console.log(\"Submitted\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n       <section className=\"form-elegant\">\r\n      <div className=\"card\">\r\n        <div className=\"card-body mx-4\">\r\n        <h2>Login</h2>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"username\", \"Username\")}\r\n          {this.renderInput(\"password\", \"Password\", \"password\")}\r\n          {this.renderButton(\"Login\")}\r\n        </form>\r\n      </div>\r\n      </div>\r\n       </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","import React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Input from \"./input\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    data: {},\r\n    errors: {}\r\n  };\r\n\r\n  validate = () => {\r\n    const options = { abortEarly: false };\r\n    const { error } = Joi.validate(this.state.data, this.schema, options);\r\n    if (!error) return null;\r\n\r\n    const errors = {};\r\n    for (let item of error.details) errors[item.path[0]] = item.message;\r\n    return errors;\r\n\r\n    // const errors = {};\r\n\r\n    // const { data } = this.state;\r\n    // if (data.username.trim() === \"\")\r\n    //   errors.username = \"Username is required\";\r\n    // if (data.password.trim() === \"\")\r\n    //   errors.password = \"Password is required\";\r\n\r\n    // return Object.keys(errors).length === 0 ? null : errors;\r\n  };\r\n\r\n  validateProperty = ({ name, value }) => {\r\n    const obj = { [name]: value };\r\n    const schema = { [name]: this.schema[name] };\r\n    const { error } = Joi.validate(obj, schema);\r\n    return error ? error.details[0].message : null;\r\n\r\n    // if (name === \"username\") {\r\n    //   if (value.trim() === \"\") return \"Username is required.\";\r\n    // }\r\n    // if (name === \"password\") {\r\n    //   if (value.trim() === \"\") return \"Password is required.\";\r\n    // }\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const errors = this.validate();\r\n\r\n    this.setState({ errors: errors || {} });\r\n    if (errors) return;\r\n\r\n    this.doSubmit();\r\n  };\r\n\r\n  handleChange = ({ currentTarget: input }) => {\r\n    const errors = { ...this.state.errors };\r\n    const errorMessage = this.validateProperty(input);\r\n    if (errorMessage) errors[input.name] = errorMessage;\r\n    else delete errors[input.name];\r\n\r\n    const data = { ...this.state.data };\r\n    data[input.name] = input.value;\r\n\r\n    this.setState({ data, errors });\r\n  };\r\n\r\n  renderButton(label) {\r\n    return (\r\n      <button disabled={this.validate()} className=\"btn btn-primary\">\r\n        {label}\r\n      </button>\r\n    );\r\n  }\r\n\r\n  renderInput(name, label, type = \"text\") {\r\n    const { data, errors } = this.state;\r\n\r\n    return (\r\n      <Input\r\n        type={type}\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;","\r\nimport React, { Component } from 'react';\r\n// import { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport \"react-tabs/style/react-tabs.css\";\r\n// import React from 'react';\r\nimport SplitterLayout from 'react-splitter-layout';\r\n\r\nimport Test from './Test';\r\nimport Assets from './Assets';\r\nimport Carriers from './Carriers';\r\nimport Colours from './Colours';\r\n\r\n \r\nclass Layout extends Component {\r\n  render() {\r\n    return (\r\n      \r\n    //   <SplitterLayout>\r\n    //     <div>Pane 1</div>\r\n    //     <div>Pane 2</div>\r\n      \r\n    //   </SplitterLayout>\r\n\r\n    <SplitterLayout primaryIndex={1} secondaryInitialSize={250}>\r\n  <div>This is a sample text which consists of no data from other components</div>\r\n  <SplitterLayout secondaryInitialSize={250}>\r\n    <SplitterLayout vertical secondaryInitialSize={250}>\r\n      <div><Assets/></div>\r\n      <SplitterLayout secondaryInitialSize={250}>\r\n        <div><Carriers/></div>\r\n        <div><Colours/></div>\r\n      </SplitterLayout>\r\n    </SplitterLayout>\r\n    <div><Test/></div>\r\n  </SplitterLayout>\r\n</SplitterLayout>\r\n    );\r\n  }\r\n}\r\n \r\nexport default Layout;","//not implementing Add function.\r\n\r\nimport React, { Component } from \"react\";\r\nimport \"react-tabs/style/react-tabs.css\";\r\nimport axios from \"axios\";\r\n\r\nconst apiEndpoint =\r\n  \"https://versergateway.com.au/VerserAssetLeasingServices/Contracts/ContractsList\";\r\n\r\nclass Random extends React.Component {\r\n  state = {\r\n    contractlists: []\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { data: contractlists } = await axios.get(apiEndpoint);\r\n    this.setState({ contractlists });\r\n  }\r\n\r\n  handleAdd = async () => {\r\n    const obj = {\r\n      contract_Plan: \"4\",\r\n      contract_EndUser: \"4\",\r\n      contract_Company: \"1\",\r\n      created: \"2014-03-27T02:30:59.7353111+00:00\",\r\n      modified: \"2019-02-11T04:51:17.6378674+00:00\"\r\n    };\r\n    const { data: post } = await axios.post(apiEndpoint, obj);\r\n\r\n    const contractlists = [post, ...this.state.contractlists];\r\n    this.setState({ contractlists });\r\n  };\r\n\r\n  //   handleChange(event) {\r\n  //     this.setState({ [event.target.name]: event.target.value });\r\n  //   }\r\n\r\n  // handleSubmit(event) {\r\n  //     event.preventDefault();\r\n  //     //  const data=JSON.stringify(this.state) //new FormData(event.target);\r\n  //     alert(JSON.stringify(this.state));\r\n  //     //  var PostData=JSON.stringify(this.state);\r\n  //     //http://localhost:57390/company/create\r\n  //     //  mode:\"no-cors\",\r\n  //     //https://versergateway.com.au/VerserAssetLeasingServices/Company/Create\r\n  //     fetch(\"https://versergateway.com.au/VerserAssetLeasingServices/Company/Create\",\r\n  //         {\r\n  //             method: 'POST',\r\n  //             cache: 'no-cache',\r\n  //             headers: {\r\n  //                 'Accept': 'application/json',\r\n  //                 'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE',\r\n  //                 'Content-Type': 'application/json'\r\n\r\n  //             },\r\n  //             body: JSON.stringify(this.state)\r\n  //         })\r\n  //         .then((resp) => resp.json())\r\n  //         .then(function (response) {\r\n  //             console.info('fetch()', response);\r\n  //             return response;\r\n  //         });\r\n  // }  commented this section bacause using axios.\r\n\r\n  //   handleSubmit = async () => {\r\n  //     const obj = {\r\n  //       companyName: \"a\",\r\n  //       addressLine1: \"b\",\r\n  //       addressLine2: \"c\",\r\n  //       suburb: \"d\",\r\n  //       state: \"e\",\r\n  //       postcode: \"f\",\r\n  //       phone: \"g\",\r\n  //       email: \"h\",\r\n  //       web: \"i\",\r\n  //       login: \"j\",\r\n  //       createdBy: \"k\",\r\n  //       serviceStartDate: \"l\",\r\n  //       serviceEndDate: \"m\",\r\n  //       created: \"n\"\r\n  //     };\r\n  //     const { data: company } = await axios.post(\r\n  //       \"https://versergateway.com.au/VerserAssetLeasingServices/Company/CompanyList\",\r\n  //       obj\r\n  //     );\r\n\r\n  //     const companys = [\r\n  //       company,\r\n  //       ...this.UNSAFE_componentWillMount.state.companys\r\n  //     ];\r\n  //     this.setState({ companys });\r\n  //   }; // work on this section i.e. handleSubmit{}, as POST is not working for axios.\r\n\r\n  render() {\r\n    var { contractlists } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        {/* <div className=\"App\"> */}\r\n\r\n        {/* <h3> Colours </h3> */}\r\n\r\n        <h4>Sample Page for Testing Purpose</h4>\r\n        <button className=\"btn btn-primary\" onClick={this.handleAdd}>\r\n          Add\r\n        </button>\r\n        <table className=\"table table-list-search\">\r\n          <thead>\r\n            <tr>\r\n              <th>contract_Plan</th>\r\n              <th>contract_EndUser</th>\r\n              <th>contract_Company</th>\r\n              <th>created</th>\r\n              <th>modified</th>\r\n              <th />\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {contractlists.map(contractlists => (\r\n              <tr key={contractlists.id}>\r\n                <td> {contractlists.contract_Plan}</td>\r\n                <td> {contractlists.contract_EndUser}</td>\r\n                <td> {contractlists.contract_Company}</td>\r\n                <td> {contractlists.created}</td>\r\n                <td> {contractlists.modified}</td>\r\n                <td>\r\n                  <button className=\"btn btn-danger btn-sm\">Delete</button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Random;\r\n","import React, { Component } from \"react\";\nimport logo from \"./images/VerserLogo.png\";\n// import { Table, Thead, Tbody, Tr, Th, Td } from 'react-super-responsive-table';\nimport \"react-super-responsive-table/dist/SuperResponsiveTableStyle.css\";\nimport \"./App.css\";\n// import TableHead from \"./TableHead\";\n// import ReactDom from 'react-dom';\n// import Submitjob from './Submitjob';\nimport Test from \"./Test\";\nimport DeviceCategories from \"./DeviceCategories\";\nimport InventoryItems from \"./InventoryItems\";\nimport Carriers from \"./Carriers\";\nimport LifecycleStatus from \"./LifecycleStatus\";\nimport Oem from \"./Oem\";\nimport OperatingSystems from \"./OperatingSystems\";\nimport Plans from \"./Plans\";\nimport Assets from \"./Assets\";\nimport CreateCompany from \"./CreateCompany\";\nimport FormFactors from \"./FormFactors\";\nimport Colours from \"./Colours\";\nimport NewContract from \"./NewContract\";\nimport CreateEndUser from \"./CreateEndUser\";\nimport CreateNewAssets from \"./CreateNewAssets\";\n// import CreateNewContract from './CreateNewContract'\nimport CreateCompanyTest from \"./CreateCompanyTest\";\nimport CompanyList from \"./CompanyList\";\nimport LoginForm from \"./registerForm\";\n\nimport Layout from \"./Layout\";\nimport Random from \"./Random\";\n\nimport {\n  Nav,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from \"reactstrap\";\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\nimport Route from \"react-router-dom/Route\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <img className=\"App-logo\" src={logo} alt=\"logo\" />\n          </header>\n          <Nav>\n            {/* <NavLink href=\"#\">Search</NavLink> */}\n            {/* <NavLink href=\"#\">Master Data</NavLink> */}\n            {/* <NavLink href=\"#\">Administration</NavLink> */}\n            {/* <UncontrolledDropdown nav inNavbar>\n              <DropdownToggle nav caret>\n                Tasks\n      </DropdownToggle>\n      \n              <DropdownMenu left>\n                <DropdownItem >\n                  Create New Assets\n        </DropdownItem>\n                <DropdownItem>\n                  Create New Company\n        </DropdownItem>\n                <DropdownItem>\n                  Create New Contract\n        </DropdownItem>\n                <DropdownItem>\n                  Create New End User\n        </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown> */}\n\n            <UncontrolledDropdown nav inNavbar>\n              <DropdownToggle nav caret>\n                Tasks\n              </DropdownToggle>\n              <DropdownMenu>\n                <DropdownItem>\n                  <Link to=\"/CreateNewAssets\">Create New Assets </Link>\n                </DropdownItem>\n                <DropdownItem>\n                  <Link to=\"/CreateCompany\">Create New Company </Link>\n                </DropdownItem>\n                {/* <DropdownItem>\n                  <Link to=\"/CreateNewContract\">CreateNewContractBasan</Link>\n                </DropdownItem> */}\n                <DropdownItem>\n                  <Link to=\"/NewContract\">Create New Contract </Link>\n                </DropdownItem>\n                <DropdownItem>\n                  <Link to=\"/CreateEndUser\">Create New End User </Link>\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n\n            <UncontrolledDropdown nav inNavbar>\n              <DropdownToggle nav caret>\n                Lists\n              </DropdownToggle>\n              <DropdownMenu>\n                <DropdownItem>\n                  <Link to=\"/CompanyList\">Company List </Link>\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n\n            <UncontrolledDropdown nav inNavbar>\n              <DropdownToggle nav caret>\n                Search\n              </DropdownToggle>\n              <DropdownMenu>\n                <DropdownItem>Search Assets</DropdownItem>\n                <DropdownItem>Search Contracts</DropdownItem>\n                <DropdownItem>Search End Users</DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n\n            <UncontrolledDropdown nav inNavbar>\n              <DropdownToggle nav caret>\n                Master Data\n              </DropdownToggle>\n              <DropdownMenu>\n                <DropdownItem>\n                  <Link to=\"/Carriers\">Carriers </Link>\n                </DropdownItem>\n                <DropdownItem>\n                  <Link to=\"/Colours\">Colours </Link>\n                </DropdownItem>\n                <DropdownItem>\n                  <Link to=\"/DeviceCategories\">DeviceCategories </Link>\n                </DropdownItem>\n                <DropdownItem>\n                  <Link to=\"/FormFacotrs\">Form Factors </Link>\n                </DropdownItem>\n                <DropdownItem>\n                  <Link to=\"/InventoryItems\">Inventory Items </Link>\n                </DropdownItem>\n                <DropdownItem>\n                  <Link to=\"/LifecycleStatus\">Lifecycle Status </Link>\n                </DropdownItem>\n                <DropdownItem>\n                  <Link to=\"/Oem\">OEMs </Link>\n                </DropdownItem>\n                <DropdownItem>\n                  <Link to=\"/OperatingSystems\">Operating Systems </Link>\n                </DropdownItem>\n                <DropdownItem>\n                  <Link to=\"/Plans\">Plans </Link>\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n\n            <UncontrolledDropdown nav inNavbar>\n              <DropdownToggle nav caret>\n                Administration\n              </DropdownToggle>\n              <DropdownMenu right>\n                <DropdownItem>Roles</DropdownItem>\n                <DropdownItem>Users</DropdownItem>\n                <DropdownItem>\n                  <Link to=\"/Layout\">Layout </Link>\n                </DropdownItem>\n                <DropdownItem>\n                  <Link to=\"/Random\">Random </Link>\n                </DropdownItem>\n                <DropdownItem>\n                  <Link to=\"/CreateCompanyTest\">Create Company Test </Link>\n                </DropdownItem>\n                <DropdownItem>\n                  <Link to=\"/registerForm\">Login </Link>\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n            {/* <input type=\"search\" className=\"searchbox\" placeholder=\"Search\" ref={input => this.search = input} onChange={this.handleInputChange} /> */}\n          </Nav>\n          <hr />\n          {/* <Submitjob /> */}\n          {/* <Test/> */}\n          {/* <DeviceCategories/> */}\n          {/* <InventoryItems/> */}\n          {/* <Carriers/> */}\n          {/* <LifecycleStatus /> */}\n          {/* <Oem/> */}\n          {/* <Plans/> */}\n          {/* <Assets/> */}\n          {/* <TableHead/> */}\n          {/* <Trial /> */}\n          {/* <Link to=\"/Oem\">got to OEM </Link> */}\n          <Route\n            path=\"/CreateNewAssets\"\n            exact\n            render={() => {\n              return <CreateNewAssets />;\n            }}\n          />\n          <Route\n            path=\"/CreateCompany\"\n            exact\n            render={() => {\n              return <CreateCompany />;\n            }}\n          />\n          {/* <Route path=\"/CreateNewContract\" exact render={\n            () => {\n              return (<CreateNewContract />)\n            }\n          } /> */}\n          <Route\n            path=\"/NewContract\"\n            exact\n            render={() => {\n              return <NewContract />;\n            }}\n          />\n          <Route\n            path=\"/CreateEndUser\"\n            exact\n            render={() => {\n              return <CreateEndUser />;\n            }}\n          />\n          <Route\n            path=\"/CompanyList\"\n            exact\n            render={() => {\n              return <CompanyList />;\n            }}\n          />\n          <Route\n            path=\"/Oem\"\n            exact\n            render={() => {\n              return <Oem />;\n            }}\n          />\n          <Route\n            path=\"/OperatingSystems\"\n            exact\n            render={() => {\n              return <OperatingSystems />;\n            }}\n          />\n          <Route\n            path=\"/Plans\"\n            exact\n            render={() => {\n              return <Plans />;\n            }}\n          />\n          <Route\n            path=\"/Test\"\n            exact\n            render={() => {\n              return <Test />;\n            }}\n          />\n          <Route\n            path=\"/FormFactors\"\n            exact\n            render={() => {\n              return <FormFactors />; //No link to fetch\n            }}\n          />\n          <Route\n            path=\"/InventoryItems\"\n            exact\n            render={() => {\n              return <InventoryItems />;\n            }}\n          />\n          <Route\n            path=\"/LifecycleStatus\"\n            exact\n            render={() => {\n              return <LifecycleStatus />;\n            }}\n          />\n          <Route\n            path=\"/DeviceCategories\"\n            exact\n            render={() => {\n              return <DeviceCategories />;\n            }}\n          />\n          <Route\n            path=\"/Carriers\"\n            exact\n            render={() => {\n              return <Carriers />;\n            }}\n          />\n          <Route\n            path=\"/Assets\"\n            exact\n            render={() => {\n              return <Assets />;\n            }}\n          />\n          <Route\n            path=\"/Colours\"\n            exact\n            render={() => {\n              return <Colours />;\n            }}\n          />\n          <Route\n            path=\"/Layout\"\n            exact\n            render={() => {\n              return <Layout />;\n            }}\n          />\n          <Route\n            path=\"/Random\"\n            exact\n            render={() => {\n              return <Random />;\n            }}\n          />\n          <Route\n            path=\"/CreateCompanyTest\"\n            exact\n            render={() => {\n              return <CreateCompanyTest />;\n            }}\n          />\n           <Route\n            path=\"/registerForm\"\n            exact\n            render={() => {\n              return <LoginForm />;\n            }}\n          />\n\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-super-responsive-table/dist/SuperResponsiveTableStyle.css';\nimport { BrowserRouter } from \"react-router-dom\";\n\nconsole.log(\"Verser\", process.env.REACT_APP_NAME);\n\nReactDOM.render(<BrowserRouter>\n    <App />\n  </BrowserRouter>, document.getElementById('App'));\n\n\n//Busineess Logic of the application can be written here.\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}